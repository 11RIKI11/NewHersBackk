// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250528025533_MigrationNahmen")]
    partial class MigrationNahmen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Model.Entities.Attendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82fca6d4-ee8e-4575-af3a-b7de7db3fd32"),
                            BirthDate = new DateTime(2005, 5, 29, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(50),
                            CreatedAt = new DateTime(2025, 5, 27, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(90),
                            DocumentNumber = "A000001",
                            DocumentType = "passport",
                            FullName = "Attendee 1"
                        },
                        new
                        {
                            Id = new Guid("3ba0b48d-c168-4c21-a66a-27f0f94fb78a"),
                            BirthDate = new DateTime(2005, 5, 30, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(95),
                            CreatedAt = new DateTime(2025, 5, 26, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(99),
                            DocumentNumber = "A000002",
                            DocumentType = "passport",
                            FullName = "Attendee 2"
                        },
                        new
                        {
                            Id = new Guid("8011a3e6-473d-449e-a736-1468b9d5bb0a"),
                            BirthDate = new DateTime(2005, 5, 31, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(101),
                            CreatedAt = new DateTime(2025, 5, 25, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(103),
                            DocumentNumber = "A000003",
                            DocumentType = "passport",
                            FullName = "Attendee 3"
                        },
                        new
                        {
                            Id = new Guid("ff253b5d-d8eb-4832-9a25-fd1c86756b36"),
                            BirthDate = new DateTime(2005, 6, 1, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(106),
                            CreatedAt = new DateTime(2025, 5, 24, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(108),
                            DocumentNumber = "A000004",
                            DocumentType = "passport",
                            FullName = "Attendee 4"
                        },
                        new
                        {
                            Id = new Guid("af0e490c-0ce0-4fe7-b9c5-2cb71afa62bf"),
                            BirthDate = new DateTime(2005, 6, 2, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(109),
                            CreatedAt = new DateTime(2025, 5, 23, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(111),
                            DocumentNumber = "A000005",
                            DocumentType = "passport",
                            FullName = "Attendee 5"
                        },
                        new
                        {
                            Id = new Guid("eccd2d95-d22c-4be9-aa48-fb555580bfc9"),
                            BirthDate = new DateTime(2005, 6, 3, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(114),
                            CreatedAt = new DateTime(2025, 5, 22, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(116),
                            DocumentNumber = "A000006",
                            DocumentType = "passport",
                            FullName = "Attendee 6"
                        },
                        new
                        {
                            Id = new Guid("8ef53e1f-b083-4358-9d28-729d1ce3ec05"),
                            BirthDate = new DateTime(2005, 6, 4, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(118),
                            CreatedAt = new DateTime(2025, 5, 21, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(120),
                            DocumentNumber = "A000007",
                            DocumentType = "passport",
                            FullName = "Attendee 7"
                        },
                        new
                        {
                            Id = new Guid("fad538e6-7fce-425a-ba4e-3221c3b8abe5"),
                            BirthDate = new DateTime(2005, 6, 5, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(122),
                            CreatedAt = new DateTime(2025, 5, 20, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(123),
                            DocumentNumber = "A000008",
                            DocumentType = "passport",
                            FullName = "Attendee 8"
                        },
                        new
                        {
                            Id = new Guid("4d61864f-d4d0-460c-ae48-07905ebc4674"),
                            BirthDate = new DateTime(2005, 6, 6, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(125),
                            CreatedAt = new DateTime(2025, 5, 19, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(127),
                            DocumentNumber = "A000009",
                            DocumentType = "passport",
                            FullName = "Attendee 9"
                        },
                        new
                        {
                            Id = new Guid("0030e547-04e5-4937-b029-006a2060e742"),
                            BirthDate = new DateTime(2005, 6, 7, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(132),
                            CreatedAt = new DateTime(2025, 5, 18, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(136),
                            DocumentNumber = "A000010",
                            DocumentType = "passport",
                            FullName = "Attendee 10"
                        },
                        new
                        {
                            Id = new Guid("61c45657-14d8-41a5-9839-a922f3a83737"),
                            BirthDate = new DateTime(2005, 6, 8, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(138),
                            CreatedAt = new DateTime(2025, 5, 17, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(140),
                            DocumentNumber = "A000011",
                            DocumentType = "passport",
                            FullName = "Attendee 11"
                        },
                        new
                        {
                            Id = new Guid("2001e11d-2571-4f40-b95c-4dac4822764c"),
                            BirthDate = new DateTime(2005, 6, 9, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(142),
                            CreatedAt = new DateTime(2025, 5, 16, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(144),
                            DocumentNumber = "A000012",
                            DocumentType = "passport",
                            FullName = "Attendee 12"
                        },
                        new
                        {
                            Id = new Guid("f7a0daaf-3f9c-4be4-a7c0-75c34806805b"),
                            BirthDate = new DateTime(2005, 6, 10, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(145),
                            CreatedAt = new DateTime(2025, 5, 15, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(147),
                            DocumentNumber = "A000013",
                            DocumentType = "passport",
                            FullName = "Attendee 13"
                        },
                        new
                        {
                            Id = new Guid("237e0cd9-b988-4a74-836d-ba0bdf0cecd4"),
                            BirthDate = new DateTime(2005, 6, 11, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(149),
                            CreatedAt = new DateTime(2025, 5, 14, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(151),
                            DocumentNumber = "A000014",
                            DocumentType = "passport",
                            FullName = "Attendee 14"
                        },
                        new
                        {
                            Id = new Guid("5cad0a92-8fb6-47d2-bd57-d3b1b4a7ade2"),
                            BirthDate = new DateTime(2005, 6, 12, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(153),
                            CreatedAt = new DateTime(2025, 5, 13, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(155),
                            DocumentNumber = "A000015",
                            DocumentType = "passport",
                            FullName = "Attendee 15"
                        },
                        new
                        {
                            Id = new Guid("f4760dff-5b7f-4c80-8d87-20ec67fc0222"),
                            BirthDate = new DateTime(2005, 6, 13, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(156),
                            CreatedAt = new DateTime(2025, 5, 12, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(158),
                            DocumentNumber = "A000016",
                            DocumentType = "passport",
                            FullName = "Attendee 16"
                        },
                        new
                        {
                            Id = new Guid("dfa19d7d-09c9-40eb-a797-f8ad6c8bd1c3"),
                            BirthDate = new DateTime(2005, 6, 14, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(160),
                            CreatedAt = new DateTime(2025, 5, 11, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(162),
                            DocumentNumber = "A000017",
                            DocumentType = "passport",
                            FullName = "Attendee 17"
                        },
                        new
                        {
                            Id = new Guid("b747f661-a50f-470b-a5ad-d11f9a97fb99"),
                            BirthDate = new DateTime(2005, 6, 15, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(166),
                            CreatedAt = new DateTime(2025, 5, 10, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(168),
                            DocumentNumber = "A000018",
                            DocumentType = "passport",
                            FullName = "Attendee 18"
                        },
                        new
                        {
                            Id = new Guid("c0c2058a-f0fd-4a89-bc99-fb30523d19a2"),
                            BirthDate = new DateTime(2005, 6, 16, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(170),
                            CreatedAt = new DateTime(2025, 5, 9, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(172),
                            DocumentNumber = "A000019",
                            DocumentType = "passport",
                            FullName = "Attendee 19"
                        },
                        new
                        {
                            Id = new Guid("e46b1d0e-13eb-4fa7-9af7-1972df0aa0ad"),
                            BirthDate = new DateTime(2005, 6, 17, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(174),
                            CreatedAt = new DateTime(2025, 5, 8, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(176),
                            DocumentNumber = "A000020",
                            DocumentType = "passport",
                            FullName = "Attendee 20"
                        },
                        new
                        {
                            Id = new Guid("19ba738b-8874-4697-92bb-4433272677d8"),
                            BirthDate = new DateTime(2005, 6, 18, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(178),
                            CreatedAt = new DateTime(2025, 5, 7, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(180),
                            DocumentNumber = "A000021",
                            DocumentType = "passport",
                            FullName = "Attendee 21"
                        },
                        new
                        {
                            Id = new Guid("34abd386-e0e3-4af6-a23b-d3895868f86f"),
                            BirthDate = new DateTime(2005, 6, 19, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(181),
                            CreatedAt = new DateTime(2025, 5, 6, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(183),
                            DocumentNumber = "A000022",
                            DocumentType = "passport",
                            FullName = "Attendee 22"
                        },
                        new
                        {
                            Id = new Guid("6d97930a-1f06-43a3-8a32-97ccdd896612"),
                            BirthDate = new DateTime(2005, 6, 20, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(185),
                            CreatedAt = new DateTime(2025, 5, 5, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(187),
                            DocumentNumber = "A000023",
                            DocumentType = "passport",
                            FullName = "Attendee 23"
                        },
                        new
                        {
                            Id = new Guid("2b820c37-b9cb-467d-a795-a9bf1a6fb8dc"),
                            BirthDate = new DateTime(2005, 6, 21, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(189),
                            CreatedAt = new DateTime(2025, 5, 4, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(191),
                            DocumentNumber = "A000024",
                            DocumentType = "passport",
                            FullName = "Attendee 24"
                        },
                        new
                        {
                            Id = new Guid("f48caff4-fea3-4045-9350-6c7db62faf2d"),
                            BirthDate = new DateTime(2005, 6, 22, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(192),
                            CreatedAt = new DateTime(2025, 5, 3, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(194),
                            DocumentNumber = "A000025",
                            DocumentType = "passport",
                            FullName = "Attendee 25"
                        },
                        new
                        {
                            Id = new Guid("05296ee5-752d-4209-aa1a-e254edac6fb1"),
                            BirthDate = new DateTime(2005, 6, 23, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(256),
                            CreatedAt = new DateTime(2025, 5, 2, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(258),
                            DocumentNumber = "A000026",
                            DocumentType = "passport",
                            FullName = "Attendee 26"
                        },
                        new
                        {
                            Id = new Guid("9ef72dbf-14f8-4b55-91c0-a81a36dd44c6"),
                            BirthDate = new DateTime(2005, 6, 24, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(261),
                            CreatedAt = new DateTime(2025, 5, 1, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(263),
                            DocumentNumber = "A000027",
                            DocumentType = "passport",
                            FullName = "Attendee 27"
                        },
                        new
                        {
                            Id = new Guid("61d1d735-771f-4872-8bfa-5a8bcd802d02"),
                            BirthDate = new DateTime(2005, 6, 25, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(265),
                            CreatedAt = new DateTime(2025, 4, 30, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(267),
                            DocumentNumber = "A000028",
                            DocumentType = "passport",
                            FullName = "Attendee 28"
                        },
                        new
                        {
                            Id = new Guid("4a7c1912-78d1-46e0-9046-c5907fc30f97"),
                            BirthDate = new DateTime(2005, 6, 26, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(269),
                            CreatedAt = new DateTime(2025, 4, 29, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(271),
                            DocumentNumber = "A000029",
                            DocumentType = "passport",
                            FullName = "Attendee 29"
                        },
                        new
                        {
                            Id = new Guid("0e788018-2f30-4a08-a643-ff1973c4a5a5"),
                            BirthDate = new DateTime(2005, 6, 27, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(272),
                            CreatedAt = new DateTime(2025, 4, 28, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(274),
                            DocumentNumber = "A000030",
                            DocumentType = "passport",
                            FullName = "Attendee 30"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TicketsCount")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f30ff617-5909-4952-ab7a-1d61d71e5c5f"),
                            CreatedAt = new DateTime(2025, 5, 27, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9886),
                            Description = "Description 1",
                            EndTime = new DateTime(2025, 5, 29, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9881),
                            IsActive = true,
                            Location = "Location 1",
                            Price = 110m,
                            StartTime = new DateTime(2025, 5, 29, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9877),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 1"
                        },
                        new
                        {
                            Id = new Guid("db5ebd98-9977-4d72-9b70-5f3d6c224e24"),
                            CreatedAt = new DateTime(2025, 5, 26, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9893),
                            Description = "Description 2",
                            EndTime = new DateTime(2025, 5, 30, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9892),
                            IsActive = true,
                            Location = "Location 2",
                            Price = 120m,
                            StartTime = new DateTime(2025, 5, 30, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9892),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 2"
                        },
                        new
                        {
                            Id = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            CreatedAt = new DateTime(2025, 5, 25, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9907),
                            Description = "Description 3",
                            EndTime = new DateTime(2025, 5, 31, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9906),
                            IsActive = true,
                            Location = "Location 3",
                            Price = 130m,
                            StartTime = new DateTime(2025, 5, 31, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9906),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 3"
                        },
                        new
                        {
                            Id = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            CreatedAt = new DateTime(2025, 5, 24, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9912),
                            Description = "Description 4",
                            EndTime = new DateTime(2025, 6, 1, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9911),
                            IsActive = true,
                            Location = "Location 4",
                            Price = 140m,
                            StartTime = new DateTime(2025, 6, 1, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9911),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 4"
                        },
                        new
                        {
                            Id = new Guid("4312b0a5-95ca-44fe-8a98-eb8617339525"),
                            CreatedAt = new DateTime(2025, 5, 23, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9915),
                            Description = "Description 5",
                            EndTime = new DateTime(2025, 6, 2, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9915),
                            IsActive = true,
                            Location = "Location 5",
                            Price = 150m,
                            StartTime = new DateTime(2025, 6, 2, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9915),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 5"
                        },
                        new
                        {
                            Id = new Guid("fba434d7-8db7-42bd-b01e-248a07fd4797"),
                            CreatedAt = new DateTime(2025, 5, 22, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9921),
                            Description = "Description 6",
                            EndTime = new DateTime(2025, 6, 3, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9921),
                            IsActive = true,
                            Location = "Location 6",
                            Price = 160m,
                            StartTime = new DateTime(2025, 6, 3, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9920),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 6"
                        },
                        new
                        {
                            Id = new Guid("0f29f13d-4926-4fdd-97ab-e954513332ed"),
                            CreatedAt = new DateTime(2025, 5, 21, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9924),
                            Description = "Description 7",
                            EndTime = new DateTime(2025, 6, 4, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9924),
                            IsActive = true,
                            Location = "Location 7",
                            Price = 170m,
                            StartTime = new DateTime(2025, 6, 4, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9924),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 7"
                        },
                        new
                        {
                            Id = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            CreatedAt = new DateTime(2025, 5, 20, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9928),
                            Description = "Description 8",
                            EndTime = new DateTime(2025, 6, 5, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9928),
                            IsActive = true,
                            Location = "Location 8",
                            Price = 180m,
                            StartTime = new DateTime(2025, 6, 5, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9927),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 8"
                        },
                        new
                        {
                            Id = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            CreatedAt = new DateTime(2025, 5, 19, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9931),
                            Description = "Description 9",
                            EndTime = new DateTime(2025, 6, 6, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9931),
                            IsActive = true,
                            Location = "Location 9",
                            Price = 190m,
                            StartTime = new DateTime(2025, 6, 6, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9930),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 9"
                        },
                        new
                        {
                            Id = new Guid("eb738875-d309-479b-8a3b-767ce4a96011"),
                            CreatedAt = new DateTime(2025, 5, 18, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9937),
                            Description = "Description 10",
                            EndTime = new DateTime(2025, 6, 7, 4, 55, 33, 227, DateTimeKind.Utc).AddTicks(9936),
                            IsActive = true,
                            Location = "Location 10",
                            Price = 200m,
                            StartTime = new DateTime(2025, 6, 7, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9936),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 10"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("EntityTarget")
                        .HasColumnType("text");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocalOrderRank")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Core.Model.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("QrUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea7e4b0a-4370-4840-91ee-1832aca8032a"),
                            Amount = 300m,
                            BuyerId = new Guid("e8bd16ea-4f1f-4deb-80c2-84dc4ea4e6cc"),
                            CreatedAt = new DateTime(2025, 5, 27, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(587),
                            PaidAt = new DateTime(2025, 5, 28, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(590),
                            QrUrl = "https://pay/ea7e4b0a-4370-4840-91ee-1832aca8032a",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("95c81d1c-87b8-4da9-9041-3626df7b2a67"),
                            Amount = 300m,
                            BuyerId = new Guid("a5a81139-739b-41a6-a7eb-2195aeae7bee"),
                            CreatedAt = new DateTime(2025, 5, 26, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(613),
                            PaidAt = new DateTime(2025, 5, 27, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(614),
                            QrUrl = "https://pay/95c81d1c-87b8-4da9-9041-3626df7b2a67",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("d8a1e412-df68-44b2-a296-0a04b6a2cf55"),
                            Amount = 300m,
                            BuyerId = new Guid("7eb1df74-b7fa-4fa4-b5e4-41e20e04879e"),
                            CreatedAt = new DateTime(2025, 5, 25, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(627),
                            PaidAt = new DateTime(2025, 5, 26, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(629),
                            QrUrl = "https://pay/d8a1e412-df68-44b2-a296-0a04b6a2cf55",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("b2edbf97-d8bf-4176-9a8a-c48eb7571eb3"),
                            Amount = 300m,
                            BuyerId = new Guid("a9cec712-4a0a-4f56-ab23-feabbcb1760c"),
                            CreatedAt = new DateTime(2025, 5, 24, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(642),
                            PaidAt = new DateTime(2025, 5, 25, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(644),
                            QrUrl = "https://pay/b2edbf97-d8bf-4176-9a8a-c48eb7571eb3",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("494d4d2a-d26a-4bb0-a8c9-cacdd8fe4ad2"),
                            Amount = 300m,
                            BuyerId = new Guid("a9cec712-4a0a-4f56-ab23-feabbcb1760c"),
                            CreatedAt = new DateTime(2025, 5, 23, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(657),
                            PaidAt = new DateTime(2025, 5, 24, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(659),
                            QrUrl = "https://pay/494d4d2a-d26a-4bb0-a8c9-cacdd8fe4ad2",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("008df5c6-f800-4ea4-9ef3-327445773c75"),
                            Amount = 0m,
                            BuyerId = new Guid("6f05c27b-d2a4-4dbf-ae22-6b3ed017bcac"),
                            CreatedAt = new DateTime(2025, 5, 22, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(680),
                            PaidAt = new DateTime(2025, 5, 23, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(682),
                            QrUrl = "https://pay/008df5c6-f800-4ea4-9ef3-327445773c75",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("f306af9d-6ddf-4b88-af05-6a8417360d9d"),
                            Amount = 0m,
                            BuyerId = new Guid("fd5bde55-fcbf-4c32-8761-93e66df112e7"),
                            CreatedAt = new DateTime(2025, 5, 21, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(702),
                            PaidAt = new DateTime(2025, 5, 22, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(703),
                            QrUrl = "https://pay/f306af9d-6ddf-4b88-af05-6a8417360d9d",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("6b0441fe-a633-4b62-9a9c-3382d5a6aec8"),
                            Amount = 0m,
                            BuyerId = new Guid("5f12b703-2d56-4b07-a65c-ecd403692906"),
                            CreatedAt = new DateTime(2025, 5, 20, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(725),
                            PaidAt = new DateTime(2025, 5, 21, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(727),
                            QrUrl = "https://pay/6b0441fe-a633-4b62-9a9c-3382d5a6aec8",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("ed2d2420-6d17-4e33-ad08-4b7592140d09"),
                            Amount = 0m,
                            BuyerId = new Guid("0de200c9-b151-481a-88e8-7547fae85847"),
                            CreatedAt = new DateTime(2025, 5, 19, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(850),
                            PaidAt = new DateTime(2025, 5, 20, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(853),
                            QrUrl = "https://pay/ed2d2420-6d17-4e33-ad08-4b7592140d09",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("48071d69-54bc-4b17-a398-a3fc7ce22e9d"),
                            Amount = 0m,
                            BuyerId = new Guid("5f12b703-2d56-4b07-a65c-ecd403692906"),
                            CreatedAt = new DateTime(2025, 5, 18, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(922),
                            PaidAt = new DateTime(2025, 5, 19, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(924),
                            QrUrl = "https://pay/48071d69-54bc-4b17-a398-a3fc7ce22e9d",
                            Status = "paid"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AttendeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BuyerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uuid");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("EventId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("299cd783-2001-4b72-ace3-6495da904393"),
                            AttendeeId = new Guid("b747f661-a50f-470b-a5ad-d11f9a97fb99"),
                            BuyerId = new Guid("a964513e-18e0-450e-a50b-3cb9c4f478ea"),
                            EventId = new Guid("eb738875-d309-479b-8a3b-767ce4a96011"),
                            QRCode = "QR0001",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("ae04ec9d-4823-4967-ae96-d395b9d7063f"),
                            AttendeeId = new Guid("237e0cd9-b988-4a74-836d-ba0bdf0cecd4"),
                            BuyerId = new Guid("c43c4c0b-e9d6-4a7b-95d0-45cbd632dd29"),
                            EventId = new Guid("db5ebd98-9977-4d72-9b70-5f3d6c224e24"),
                            QRCode = "QR0002",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("22f6a18c-00d1-4eaa-9ad9-81956ca86769"),
                            AttendeeId = new Guid("c0c2058a-f0fd-4a89-bc99-fb30523d19a2"),
                            BuyerId = new Guid("a9cec712-4a0a-4f56-ab23-feabbcb1760c"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0003",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("a53e4002-a05c-455c-9699-317463297d96"),
                            AttendeeId = new Guid("ff253b5d-d8eb-4832-9a25-fd1c86756b36"),
                            BuyerId = new Guid("0de200c9-b151-481a-88e8-7547fae85847"),
                            EventId = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            QRCode = "QR0004",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("766d60a7-0e0f-4d1f-b491-49fcea961078"),
                            AttendeeId = new Guid("2001e11d-2571-4f40-b95c-4dac4822764c"),
                            BuyerId = new Guid("0de200c9-b151-481a-88e8-7547fae85847"),
                            EventId = new Guid("eb738875-d309-479b-8a3b-767ce4a96011"),
                            QRCode = "QR0005",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("8c8d3ca9-0db3-4bff-8dab-d7f4a0009779"),
                            AttendeeId = new Guid("5cad0a92-8fb6-47d2-bd57-d3b1b4a7ade2"),
                            BuyerId = new Guid("e8bd16ea-4f1f-4deb-80c2-84dc4ea4e6cc"),
                            EventId = new Guid("fba434d7-8db7-42bd-b01e-248a07fd4797"),
                            QRCode = "QR0006",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("8771f9f9-4426-4228-8654-aedc7568211e"),
                            AttendeeId = new Guid("8011a3e6-473d-449e-a736-1468b9d5bb0a"),
                            BuyerId = new Guid("6a830adb-244a-47a4-8758-2b7dfc1bdea1"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0007",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("dbf09d46-c6c5-4387-87eb-7e1f89b29f40"),
                            AttendeeId = new Guid("05296ee5-752d-4209-aa1a-e254edac6fb1"),
                            BuyerId = new Guid("179e1a6d-93d4-4d6a-a0e4-5285d5ecf5f1"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0008",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("ca5c5628-a5a8-4171-b414-742129afda43"),
                            AttendeeId = new Guid("0e788018-2f30-4a08-a643-ff1973c4a5a5"),
                            BuyerId = new Guid("0de200c9-b151-481a-88e8-7547fae85847"),
                            EventId = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            QRCode = "QR0009",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("86af063e-1ade-4bef-8487-964156a1ce0c"),
                            AttendeeId = new Guid("f7a0daaf-3f9c-4be4-a7c0-75c34806805b"),
                            BuyerId = new Guid("0fdd3bd3-bc97-428f-aa1f-caabdc00456a"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0010",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("59ff3eae-dbe0-4eb6-9374-70d6bc93e9de"),
                            AttendeeId = new Guid("f48caff4-fea3-4045-9350-6c7db62faf2d"),
                            BuyerId = new Guid("60e7701a-534f-4ba4-a471-be66025356d8"),
                            EventId = new Guid("fba434d7-8db7-42bd-b01e-248a07fd4797"),
                            QRCode = "QR0011",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("06dc4dd3-5f5a-43d5-8174-44ca8f8fa7e4"),
                            AttendeeId = new Guid("19ba738b-8874-4697-92bb-4433272677d8"),
                            BuyerId = new Guid("0a3202d7-fbcb-4539-8ea3-db1e8aa27f35"),
                            EventId = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            QRCode = "QR0012",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("96887698-74ee-4642-b23c-35ffcb87f345"),
                            AttendeeId = new Guid("82fca6d4-ee8e-4575-af3a-b7de7db3fd32"),
                            BuyerId = new Guid("6f05c27b-d2a4-4dbf-ae22-6b3ed017bcac"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0013",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("c5eddb45-baf0-4324-b29e-46d337cb78a8"),
                            AttendeeId = new Guid("61d1d735-771f-4872-8bfa-5a8bcd802d02"),
                            BuyerId = new Guid("0a3202d7-fbcb-4539-8ea3-db1e8aa27f35"),
                            EventId = new Guid("0f29f13d-4926-4fdd-97ab-e954513332ed"),
                            QRCode = "QR0014",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("06256b2c-9ce5-48a2-9a46-c569b1726031"),
                            AttendeeId = new Guid("19ba738b-8874-4697-92bb-4433272677d8"),
                            BuyerId = new Guid("3ced4e54-4870-473b-b93e-44a9f8af2406"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0015",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("6f4ff8b3-855a-4f26-8289-c3e29928283c"),
                            AttendeeId = new Guid("0e788018-2f30-4a08-a643-ff1973c4a5a5"),
                            BuyerId = new Guid("fd5bde55-fcbf-4c32-8761-93e66df112e7"),
                            EventId = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            QRCode = "QR0016",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("52617a73-3fe6-4d55-9d60-6aadb16581b4"),
                            AttendeeId = new Guid("19ba738b-8874-4697-92bb-4433272677d8"),
                            BuyerId = new Guid("e8bd16ea-4f1f-4deb-80c2-84dc4ea4e6cc"),
                            EventId = new Guid("4312b0a5-95ca-44fe-8a98-eb8617339525"),
                            QRCode = "QR0017",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("c0131708-fcbc-47aa-8be9-9f6c4f3cb6cf"),
                            AttendeeId = new Guid("af0e490c-0ce0-4fe7-b9c5-2cb71afa62bf"),
                            BuyerId = new Guid("fd5bde55-fcbf-4c32-8761-93e66df112e7"),
                            EventId = new Guid("f30ff617-5909-4952-ab7a-1d61d71e5c5f"),
                            QRCode = "QR0018",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("9e3a2ee8-0245-4f4b-a69c-258b04010e2d"),
                            AttendeeId = new Guid("9ef72dbf-14f8-4b55-91c0-a81a36dd44c6"),
                            BuyerId = new Guid("c43c4c0b-e9d6-4a7b-95d0-45cbd632dd29"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0019",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("04ebdc6b-16e4-4768-8e89-91e7629f1d23"),
                            AttendeeId = new Guid("19ba738b-8874-4697-92bb-4433272677d8"),
                            BuyerId = new Guid("0fdd3bd3-bc97-428f-aa1f-caabdc00456a"),
                            EventId = new Guid("0f29f13d-4926-4fdd-97ab-e954513332ed"),
                            QRCode = "QR0020",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("1d228755-7d52-4065-92f5-6a07fc65a37d"),
                            AttendeeId = new Guid("0e788018-2f30-4a08-a643-ff1973c4a5a5"),
                            BuyerId = new Guid("60e7701a-534f-4ba4-a471-be66025356d8"),
                            EventId = new Guid("eb738875-d309-479b-8a3b-767ce4a96011"),
                            QRCode = "QR0021",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("69387117-54f0-4e4b-988f-dbf38e3cf083"),
                            AttendeeId = new Guid("9ef72dbf-14f8-4b55-91c0-a81a36dd44c6"),
                            BuyerId = new Guid("59031698-a35e-435e-ab62-7a93b0e21e4a"),
                            EventId = new Guid("eb738875-d309-479b-8a3b-767ce4a96011"),
                            QRCode = "QR0022",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("48e842d7-5673-4ed5-894d-c784b5300f8d"),
                            AttendeeId = new Guid("5cad0a92-8fb6-47d2-bd57-d3b1b4a7ade2"),
                            BuyerId = new Guid("59031698-a35e-435e-ab62-7a93b0e21e4a"),
                            EventId = new Guid("eb738875-d309-479b-8a3b-767ce4a96011"),
                            QRCode = "QR0023",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("30e7e0b8-bca2-43b9-a2f9-a9a283679dfb"),
                            AttendeeId = new Guid("b747f661-a50f-470b-a5ad-d11f9a97fb99"),
                            BuyerId = new Guid("0fdd3bd3-bc97-428f-aa1f-caabdc00456a"),
                            EventId = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            QRCode = "QR0024",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("4628bd0b-7933-4246-89d0-d0f8cd348461"),
                            AttendeeId = new Guid("3ba0b48d-c168-4c21-a66a-27f0f94fb78a"),
                            BuyerId = new Guid("6f05c27b-d2a4-4dbf-ae22-6b3ed017bcac"),
                            EventId = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            QRCode = "QR0025",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("3853f483-bc56-4453-8613-f20aa863806a"),
                            AttendeeId = new Guid("82fca6d4-ee8e-4575-af3a-b7de7db3fd32"),
                            BuyerId = new Guid("6b0880df-ae96-4f74-906e-df37923a6bd4"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0026",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("afcd3680-6072-42c1-a38e-395e47c8b166"),
                            AttendeeId = new Guid("e46b1d0e-13eb-4fa7-9af7-1972df0aa0ad"),
                            BuyerId = new Guid("5f12b703-2d56-4b07-a65c-ecd403692906"),
                            EventId = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            QRCode = "QR0027",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("ec619312-adf0-4f39-87f9-1cc651d477f3"),
                            AttendeeId = new Guid("f4760dff-5b7f-4c80-8d87-20ec67fc0222"),
                            BuyerId = new Guid("fd5bde55-fcbf-4c32-8761-93e66df112e7"),
                            EventId = new Guid("0f29f13d-4926-4fdd-97ab-e954513332ed"),
                            QRCode = "QR0028",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("190d75da-e3f0-4a4a-8d2a-6dc87ab18b69"),
                            AttendeeId = new Guid("4a7c1912-78d1-46e0-9046-c5907fc30f97"),
                            BuyerId = new Guid("6a830adb-244a-47a4-8758-2b7dfc1bdea1"),
                            EventId = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            QRCode = "QR0029",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("35297b6f-4441-40ae-ba23-77484538746a"),
                            AttendeeId = new Guid("2b820c37-b9cb-467d-a795-a9bf1a6fb8dc"),
                            BuyerId = new Guid("fd5bde55-fcbf-4c32-8761-93e66df112e7"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0030",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("22cebb10-fd68-4785-aefd-af0280ac160e"),
                            AttendeeId = new Guid("dfa19d7d-09c9-40eb-a797-f8ad6c8bd1c3"),
                            BuyerId = new Guid("0fdd3bd3-bc97-428f-aa1f-caabdc00456a"),
                            EventId = new Guid("f30ff617-5909-4952-ab7a-1d61d71e5c5f"),
                            QRCode = "QR0031",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("8da3bedb-d5b5-4f81-befa-db32a97f68e5"),
                            AttendeeId = new Guid("9ef72dbf-14f8-4b55-91c0-a81a36dd44c6"),
                            BuyerId = new Guid("092b0d76-1a67-4d9e-ad65-46dbe78b5a01"),
                            EventId = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            QRCode = "QR0032",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("57557726-4c83-4758-959c-1879bca2ca54"),
                            AttendeeId = new Guid("9ef72dbf-14f8-4b55-91c0-a81a36dd44c6"),
                            BuyerId = new Guid("179e1a6d-93d4-4d6a-a0e4-5285d5ecf5f1"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0033",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("5885d94c-1662-4315-8fa6-7c560f945e5f"),
                            AttendeeId = new Guid("c0c2058a-f0fd-4a89-bc99-fb30523d19a2"),
                            BuyerId = new Guid("60e7701a-534f-4ba4-a471-be66025356d8"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0034",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("b2a066e6-c4bd-41b1-ac06-58e38c92f935"),
                            AttendeeId = new Guid("dfa19d7d-09c9-40eb-a797-f8ad6c8bd1c3"),
                            BuyerId = new Guid("16932bed-afa4-4c6e-bac6-5c320d6a1aea"),
                            EventId = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            QRCode = "QR0035",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("a94c6621-3082-4a6b-95ec-ecc746ff35a7"),
                            AttendeeId = new Guid("c0c2058a-f0fd-4a89-bc99-fb30523d19a2"),
                            BuyerId = new Guid("59031698-a35e-435e-ab62-7a93b0e21e4a"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0036",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("b1a4ae38-57ef-4abc-bfcf-f053167d9f2f"),
                            AttendeeId = new Guid("05296ee5-752d-4209-aa1a-e254edac6fb1"),
                            BuyerId = new Guid("0a3202d7-fbcb-4539-8ea3-db1e8aa27f35"),
                            EventId = new Guid("4312b0a5-95ca-44fe-8a98-eb8617339525"),
                            QRCode = "QR0037",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("066d01c3-1cd7-4a76-8ba7-8fdaf0533127"),
                            AttendeeId = new Guid("b747f661-a50f-470b-a5ad-d11f9a97fb99"),
                            BuyerId = new Guid("092b0d76-1a67-4d9e-ad65-46dbe78b5a01"),
                            EventId = new Guid("0f29f13d-4926-4fdd-97ab-e954513332ed"),
                            QRCode = "QR0038",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("8640263e-b0ee-4b96-bf1f-a1fc289993a4"),
                            AttendeeId = new Guid("61c45657-14d8-41a5-9839-a922f3a83737"),
                            BuyerId = new Guid("7eb1df74-b7fa-4fa4-b5e4-41e20e04879e"),
                            EventId = new Guid("fba434d7-8db7-42bd-b01e-248a07fd4797"),
                            QRCode = "QR0039",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("02064404-a54f-43d9-8dce-b61e8b39f1c2"),
                            AttendeeId = new Guid("61c45657-14d8-41a5-9839-a922f3a83737"),
                            BuyerId = new Guid("a964513e-18e0-450e-a50b-3cb9c4f478ea"),
                            EventId = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            QRCode = "QR0040",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("50411810-301f-473e-8a65-5373034d6a81"),
                            AttendeeId = new Guid("fad538e6-7fce-425a-ba4e-3221c3b8abe5"),
                            BuyerId = new Guid("3ced4e54-4870-473b-b93e-44a9f8af2406"),
                            EventId = new Guid("ee493d94-55cf-46b6-9bd8-1ea4d6b060a7"),
                            QRCode = "QR0041",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("d16b9f96-58eb-45f3-b472-fb365a05a676"),
                            AttendeeId = new Guid("e46b1d0e-13eb-4fa7-9af7-1972df0aa0ad"),
                            BuyerId = new Guid("6f05c27b-d2a4-4dbf-ae22-6b3ed017bcac"),
                            EventId = new Guid("ff7c7c97-f9c1-4c42-bcce-b93bce291304"),
                            QRCode = "QR0042",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("b79f14c1-4282-4685-8ae9-38c4a7664fc4"),
                            AttendeeId = new Guid("19ba738b-8874-4697-92bb-4433272677d8"),
                            BuyerId = new Guid("a5a81139-739b-41a6-a7eb-2195aeae7bee"),
                            EventId = new Guid("eb738875-d309-479b-8a3b-767ce4a96011"),
                            QRCode = "QR0043",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("0688219c-08d5-4815-8b66-2429c5701537"),
                            AttendeeId = new Guid("5cad0a92-8fb6-47d2-bd57-d3b1b4a7ade2"),
                            BuyerId = new Guid("179e1a6d-93d4-4d6a-a0e4-5285d5ecf5f1"),
                            EventId = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            QRCode = "QR0044",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("5ebfa9c1-9d0f-4e30-b5e2-d560a504637d"),
                            AttendeeId = new Guid("2001e11d-2571-4f40-b95c-4dac4822764c"),
                            BuyerId = new Guid("0a3202d7-fbcb-4539-8ea3-db1e8aa27f35"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0045",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("ad1d3d91-9bbc-42e3-938d-440893e9e4ed"),
                            AttendeeId = new Guid("f7a0daaf-3f9c-4be4-a7c0-75c34806805b"),
                            BuyerId = new Guid("6a830adb-244a-47a4-8758-2b7dfc1bdea1"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0046",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("0ab8de78-a222-49dd-bb4e-6a16f170aa6c"),
                            AttendeeId = new Guid("4d61864f-d4d0-460c-ae48-07905ebc4674"),
                            BuyerId = new Guid("e8bd16ea-4f1f-4deb-80c2-84dc4ea4e6cc"),
                            EventId = new Guid("4312b0a5-95ca-44fe-8a98-eb8617339525"),
                            QRCode = "QR0047",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("b8db3353-24c1-4056-be95-37228331ebd7"),
                            AttendeeId = new Guid("b747f661-a50f-470b-a5ad-d11f9a97fb99"),
                            BuyerId = new Guid("7eb1df74-b7fa-4fa4-b5e4-41e20e04879e"),
                            EventId = new Guid("09a8ea8c-2f54-446f-b8b5-5bb2bdeeaae6"),
                            QRCode = "QR0048",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("f78b1e06-af63-4234-a95c-cff799a034af"),
                            AttendeeId = new Guid("4a7c1912-78d1-46e0-9046-c5907fc30f97"),
                            BuyerId = new Guid("092b0d76-1a67-4d9e-ad65-46dbe78b5a01"),
                            EventId = new Guid("f30ff617-5909-4952-ab7a-1d61d71e5c5f"),
                            QRCode = "QR0049",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("0f0b987a-20ff-42dc-9256-8d57cd8da007"),
                            AttendeeId = new Guid("5cad0a92-8fb6-47d2-bd57-d3b1b4a7ade2"),
                            BuyerId = new Guid("6f05c27b-d2a4-4dbf-ae22-6b3ed017bcac"),
                            EventId = new Guid("34d66fc6-ead6-4e7e-94f7-6adbe6ff8d3a"),
                            QRCode = "QR0050",
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16932bed-afa4-4c6e-bac6-5c320d6a1aea"),
                            CreatedAt = new DateTime(2025, 5, 27, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9949),
                            Email = "user1@mail.com",
                            FullName = "User 1",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("092b0d76-1a67-4d9e-ad65-46dbe78b5a01"),
                            CreatedAt = new DateTime(2025, 5, 26, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9954),
                            Email = "user2@mail.com",
                            FullName = "User 2",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("59031698-a35e-435e-ab62-7a93b0e21e4a"),
                            CreatedAt = new DateTime(2025, 5, 25, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9956),
                            Email = "user3@mail.com",
                            FullName = "User 3",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("c43c4c0b-e9d6-4a7b-95d0-45cbd632dd29"),
                            CreatedAt = new DateTime(2025, 5, 24, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9959),
                            Email = "user4@mail.com",
                            FullName = "User 4",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("a964513e-18e0-450e-a50b-3cb9c4f478ea"),
                            CreatedAt = new DateTime(2025, 5, 23, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9961),
                            Email = "user5@mail.com",
                            FullName = "User 5",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("0fdd3bd3-bc97-428f-aa1f-caabdc00456a"),
                            CreatedAt = new DateTime(2025, 5, 22, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9964),
                            Email = "user6@mail.com",
                            FullName = "User 6",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6a830adb-244a-47a4-8758-2b7dfc1bdea1"),
                            CreatedAt = new DateTime(2025, 5, 21, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9966),
                            Email = "user7@mail.com",
                            FullName = "User 7",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("a5a81139-739b-41a6-a7eb-2195aeae7bee"),
                            CreatedAt = new DateTime(2025, 5, 20, 2, 55, 33, 227, DateTimeKind.Utc).AddTicks(9999),
                            Email = "user8@mail.com",
                            FullName = "User 8",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("179e1a6d-93d4-4d6a-a0e4-5285d5ecf5f1"),
                            CreatedAt = new DateTime(2025, 5, 19, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(3),
                            Email = "user9@mail.com",
                            FullName = "User 9",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("60e7701a-534f-4ba4-a471-be66025356d8"),
                            CreatedAt = new DateTime(2025, 5, 18, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(7),
                            Email = "user10@mail.com",
                            FullName = "User 10",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("fd5bde55-fcbf-4c32-8761-93e66df112e7"),
                            CreatedAt = new DateTime(2025, 5, 17, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(10),
                            Email = "user11@mail.com",
                            FullName = "User 11",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("7eb1df74-b7fa-4fa4-b5e4-41e20e04879e"),
                            CreatedAt = new DateTime(2025, 5, 16, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(12),
                            Email = "user12@mail.com",
                            FullName = "User 12",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("5f12b703-2d56-4b07-a65c-ecd403692906"),
                            CreatedAt = new DateTime(2025, 5, 15, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(14),
                            Email = "user13@mail.com",
                            FullName = "User 13",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6b0880df-ae96-4f74-906e-df37923a6bd4"),
                            CreatedAt = new DateTime(2025, 5, 14, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(16),
                            Email = "user14@mail.com",
                            FullName = "User 14",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("e8bd16ea-4f1f-4deb-80c2-84dc4ea4e6cc"),
                            CreatedAt = new DateTime(2025, 5, 13, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(19),
                            Email = "user15@mail.com",
                            FullName = "User 15",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6f05c27b-d2a4-4dbf-ae22-6b3ed017bcac"),
                            CreatedAt = new DateTime(2025, 5, 12, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(21),
                            Email = "user16@mail.com",
                            FullName = "User 16",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("0a3202d7-fbcb-4539-8ea3-db1e8aa27f35"),
                            CreatedAt = new DateTime(2025, 5, 11, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(25),
                            Email = "user17@mail.com",
                            FullName = "User 17",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("0de200c9-b151-481a-88e8-7547fae85847"),
                            CreatedAt = new DateTime(2025, 5, 10, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(28),
                            Email = "user18@mail.com",
                            FullName = "User 18",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("a9cec712-4a0a-4f56-ab23-feabbcb1760c"),
                            CreatedAt = new DateTime(2025, 5, 9, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(31),
                            Email = "user19@mail.com",
                            FullName = "User 19",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("3ced4e54-4870-473b-b93e-44a9f8af2406"),
                            CreatedAt = new DateTime(2025, 5, 8, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(33),
                            Email = "user20@mail.com",
                            FullName = "User 20",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("462287b1-1cb4-4856-a60f-2bbbcc16469f"),
                            CreatedAt = new DateTime(2025, 5, 27, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(38),
                            Email = "admin1@mail.com",
                            FullName = "Admin 1",
                            PasswordHash = "hash",
                            Role = "admin"
                        },
                        new
                        {
                            Id = new Guid("91765462-a05f-428b-ab3a-517a02e5646d"),
                            CreatedAt = new DateTime(2025, 5, 26, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(42),
                            Email = "admin2@mail.com",
                            FullName = "Admin 2",
                            PasswordHash = "hash",
                            Role = "admin"
                        },
                        new
                        {
                            Id = new Guid("7538b821-90d8-4521-abf4-4b788afcaf05"),
                            CreatedAt = new DateTime(2025, 5, 25, 2, 55, 33, 228, DateTimeKind.Utc).AddTicks(44),
                            Email = "admin3@mail.com",
                            FullName = "Admin 3",
                            PasswordHash = "hash",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.UserAttendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAttendees");
                });

            modelBuilder.Entity("Core.Model.Entities.UserEventCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReminderTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEventCalendars");
                });

            modelBuilder.Entity("Core.Model.Entities.Payment", b =>
                {
                    b.HasOne("Core.Model.Entities.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Core.Model.Entities.Ticket", b =>
                {
                    b.HasOne("Core.Model.Entities.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId");

                    b.HasOne("Core.Model.Entities.User", "Buyer")
                        .WithMany("Tickets")
                        .HasForeignKey("BuyerId");

                    b.HasOne("Core.Model.Entities.Event", "Event")
                        .WithMany("Tickets")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.Navigation("Attendee");

                    b.Navigation("Buyer");

                    b.Navigation("Event");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Core.Model.Entities.UserAttendee", b =>
                {
                    b.HasOne("Core.Model.Entities.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Model.Entities.UserEventCalendar", b =>
                {
                    b.HasOne("Core.Model.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.User", "User")
                        .WithMany("Calendars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Model.Entities.Event", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Core.Model.Entities.User", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
