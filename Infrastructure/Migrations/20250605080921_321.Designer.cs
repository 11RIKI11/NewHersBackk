// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250605080921_321")]
    partial class _321
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Model.Entities.Attendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ceabd557-c142-44b6-9254-8bc00bf9155a"),
                            BirthDate = new DateTime(2006, 6, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9121),
                            CreatedAt = new DateTime(2025, 6, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "724571221",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 1"
                        },
                        new
                        {
                            Id = new Guid("18cf480d-2811-405a-a6b9-6d1cb9f3a8f6"),
                            BirthDate = new DateTime(2004, 12, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9126),
                            CreatedAt = new DateTime(2025, 6, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4002 489191",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 2"
                        },
                        new
                        {
                            Id = new Guid("95f6294e-2183-4eb0-a463-28babed4597f"),
                            BirthDate = new DateTime(2001, 4, 8, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9132),
                            CreatedAt = new DateTime(2025, 6, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "725819109",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 3"
                        },
                        new
                        {
                            Id = new Guid("92964d03-153d-4b7b-b882-981486b077c5"),
                            BirthDate = new DateTime(2001, 2, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9134),
                            CreatedAt = new DateTime(2025, 6, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4004 349979",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 4"
                        },
                        new
                        {
                            Id = new Guid("bcff8abf-4f5c-44c9-9447-5fe9ed98ef14"),
                            BirthDate = new DateTime(2007, 5, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9138),
                            CreatedAt = new DateTime(2025, 5, 31, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721913622",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 5"
                        },
                        new
                        {
                            Id = new Guid("9d91a722-ccd9-4af3-bcac-bceb30e66092"),
                            BirthDate = new DateTime(2004, 10, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9141),
                            CreatedAt = new DateTime(2025, 5, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4006 193943",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 6"
                        },
                        new
                        {
                            Id = new Guid("63fa3409-ad59-4418-8b64-fcc0062ba474"),
                            BirthDate = new DateTime(2003, 1, 18, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9143),
                            CreatedAt = new DateTime(2025, 5, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "722671975",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 7"
                        },
                        new
                        {
                            Id = new Guid("6d827a77-5d12-42e4-bdc7-8d73951e34bf"),
                            BirthDate = new DateTime(2003, 6, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9145),
                            CreatedAt = new DateTime(2025, 5, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4008 455691",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 8"
                        },
                        new
                        {
                            Id = new Guid("99dbfb88-4c60-463c-beb7-1201ae899787"),
                            BirthDate = new DateTime(2008, 2, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9148),
                            CreatedAt = new DateTime(2025, 5, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728442478",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 9"
                        },
                        new
                        {
                            Id = new Guid("389509ca-ef78-4f66-9961-effff3d1a08a"),
                            BirthDate = new DateTime(2007, 10, 16, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9150),
                            CreatedAt = new DateTime(2025, 5, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4010 731827",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 10"
                        },
                        new
                        {
                            Id = new Guid("3655b329-9bc5-41d5-947e-6e55523c6ee2"),
                            BirthDate = new DateTime(2003, 2, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9152),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "722286062",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 11"
                        },
                        new
                        {
                            Id = new Guid("f6e87243-74ad-41b7-b08c-d6bc91859939"),
                            BirthDate = new DateTime(2007, 5, 9, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9154),
                            CreatedAt = new DateTime(2025, 5, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4012 396356",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 12"
                        },
                        new
                        {
                            Id = new Guid("f1a43522-9afa-427c-878b-e4050d7d8ec8"),
                            BirthDate = new DateTime(2009, 4, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9158),
                            CreatedAt = new DateTime(2025, 5, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "723710412",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 13"
                        },
                        new
                        {
                            Id = new Guid("aed2f5f4-51b6-444e-b035-75f985c54224"),
                            BirthDate = new DateTime(2008, 8, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9160),
                            CreatedAt = new DateTime(2025, 5, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4014 495471",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 14"
                        },
                        new
                        {
                            Id = new Guid("b03ddd25-99d8-4f25-b332-cb245b6a5f66"),
                            BirthDate = new DateTime(2009, 1, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9162),
                            CreatedAt = new DateTime(2025, 5, 21, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721548969",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 15"
                        },
                        new
                        {
                            Id = new Guid("996c602a-22c7-4acf-8be5-563ccb36838f"),
                            BirthDate = new DateTime(2008, 9, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9164),
                            CreatedAt = new DateTime(2025, 5, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4016 613066",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 16"
                        },
                        new
                        {
                            Id = new Guid("4f9969c3-03c5-4ac4-8050-9f015bc074f2"),
                            BirthDate = new DateTime(2008, 12, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9166),
                            CreatedAt = new DateTime(2025, 5, 19, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "729141640",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 17"
                        },
                        new
                        {
                            Id = new Guid("6052fdf4-d4fa-4018-85e5-b5c216644376"),
                            BirthDate = new DateTime(2006, 3, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9168),
                            CreatedAt = new DateTime(2025, 5, 18, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4018 360186",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 18"
                        },
                        new
                        {
                            Id = new Guid("07568300-aa35-4e99-b816-96511a0fa1c8"),
                            BirthDate = new DateTime(2007, 8, 13, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9170),
                            CreatedAt = new DateTime(2025, 5, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "722948864",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 19"
                        },
                        new
                        {
                            Id = new Guid("34c6f5f8-3cfd-4472-ac75-4bc2ca4b767a"),
                            BirthDate = new DateTime(2008, 3, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9172),
                            CreatedAt = new DateTime(2025, 5, 16, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4020 131105",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 20"
                        },
                        new
                        {
                            Id = new Guid("a5ad8ff7-5fb4-44e8-ab76-fb2689a5d45a"),
                            BirthDate = new DateTime(2002, 6, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9176),
                            CreatedAt = new DateTime(2025, 5, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "729043293",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 21"
                        },
                        new
                        {
                            Id = new Guid("fc33be71-954d-4ca6-928f-00dc48817b6c"),
                            BirthDate = new DateTime(2007, 9, 14, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9178),
                            CreatedAt = new DateTime(2025, 5, 14, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4022 774117",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 22"
                        },
                        new
                        {
                            Id = new Guid("a5180c2a-5bd1-4325-8e41-756a7713df69"),
                            BirthDate = new DateTime(2005, 11, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9179),
                            CreatedAt = new DateTime(2025, 5, 13, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728968688",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 23"
                        },
                        new
                        {
                            Id = new Guid("e8fd5589-3532-4547-a5a5-b0696bcdafc5"),
                            BirthDate = new DateTime(2005, 3, 7, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9181),
                            CreatedAt = new DateTime(2025, 5, 12, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4024 519935",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 24"
                        },
                        new
                        {
                            Id = new Guid("74fe23d3-47e4-4bb1-b5d8-36b1d34a86b6"),
                            BirthDate = new DateTime(2002, 1, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9183),
                            CreatedAt = new DateTime(2025, 5, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728897499",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 25"
                        },
                        new
                        {
                            Id = new Guid("8ea15733-b7f8-4d94-893b-04b7bbbd8804"),
                            BirthDate = new DateTime(2010, 5, 31, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9185),
                            CreatedAt = new DateTime(2025, 5, 10, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4026 918139",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 26"
                        },
                        new
                        {
                            Id = new Guid("215773c5-0e07-4d7b-b0c7-7f68c5a810f0"),
                            BirthDate = new DateTime(2003, 12, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9187),
                            CreatedAt = new DateTime(2025, 5, 9, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "726986019",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 27"
                        },
                        new
                        {
                            Id = new Guid("da618abb-3ca4-4b3f-ba9f-99188bd2b96e"),
                            BirthDate = new DateTime(2001, 8, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9189),
                            CreatedAt = new DateTime(2025, 5, 8, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4028 829315",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 28"
                        },
                        new
                        {
                            Id = new Guid("a5f504ad-620f-4430-ab11-796701726c76"),
                            BirthDate = new DateTime(2009, 8, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9192),
                            CreatedAt = new DateTime(2025, 5, 7, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "729762872",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 29"
                        },
                        new
                        {
                            Id = new Guid("5e4c88bd-5eca-4ed5-b864-9cd5d6d7e865"),
                            BirthDate = new DateTime(2006, 4, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9194),
                            CreatedAt = new DateTime(2025, 5, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4030 302564",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 30"
                        },
                        new
                        {
                            Id = new Guid("2cd8ae16-5402-48cb-bbfd-f1f3ffea766e"),
                            BirthDate = new DateTime(2005, 10, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9196),
                            CreatedAt = new DateTime(2025, 5, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "727358004",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 31"
                        },
                        new
                        {
                            Id = new Guid("bd201d85-0b77-4acf-bdaf-8999cd56f8e7"),
                            BirthDate = new DateTime(2003, 1, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9198),
                            CreatedAt = new DateTime(2025, 5, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4032 557876",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 32"
                        },
                        new
                        {
                            Id = new Guid("4bfd0a83-5fba-4e56-a177-37bbe40738a0"),
                            BirthDate = new DateTime(2008, 9, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9200),
                            CreatedAt = new DateTime(2025, 5, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721335959",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 33"
                        },
                        new
                        {
                            Id = new Guid("d6d58ad1-398c-472c-951d-419dcdd680bd"),
                            BirthDate = new DateTime(2001, 12, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9203),
                            CreatedAt = new DateTime(2025, 5, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4034 264353",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 34"
                        },
                        new
                        {
                            Id = new Guid("72bff8bb-e794-41b3-b2ed-f2a09026acbf"),
                            BirthDate = new DateTime(2004, 10, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9205),
                            CreatedAt = new DateTime(2025, 5, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "724504350",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 35"
                        },
                        new
                        {
                            Id = new Guid("b0bee630-30b5-4fab-bc74-ef5a3fa41f19"),
                            BirthDate = new DateTime(2009, 9, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9207),
                            CreatedAt = new DateTime(2025, 4, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4036 731513",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 36"
                        },
                        new
                        {
                            Id = new Guid("5de00c40-3983-41fb-a69f-919d2edf52fa"),
                            BirthDate = new DateTime(2002, 10, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9210),
                            CreatedAt = new DateTime(2025, 4, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721573661",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 37"
                        },
                        new
                        {
                            Id = new Guid("d91c1fcb-68b6-4abe-afd5-86812ccbb487"),
                            BirthDate = new DateTime(2002, 5, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9238),
                            CreatedAt = new DateTime(2025, 4, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4038 199982",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 38"
                        },
                        new
                        {
                            Id = new Guid("897c170f-cb3a-4714-80ac-d557e8e24c8d"),
                            BirthDate = new DateTime(2004, 11, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9241),
                            CreatedAt = new DateTime(2025, 4, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "724646604",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 39"
                        },
                        new
                        {
                            Id = new Guid("4e24432b-04d4-4375-ba2e-78bff0e4b3ae"),
                            BirthDate = new DateTime(2005, 1, 8, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9243),
                            CreatedAt = new DateTime(2025, 4, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4040 810870",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 40"
                        },
                        new
                        {
                            Id = new Guid("c719284b-4466-4d8e-851b-4d1b1eb100f4"),
                            BirthDate = new DateTime(2002, 5, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9245),
                            CreatedAt = new DateTime(2025, 4, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728667312",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 41"
                        },
                        new
                        {
                            Id = new Guid("33cf855d-a515-4389-8da5-d685e07954f7"),
                            BirthDate = new DateTime(2008, 11, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9247),
                            CreatedAt = new DateTime(2025, 4, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4042 186133",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 42"
                        },
                        new
                        {
                            Id = new Guid("abb63f99-b58b-44c1-b9bd-c5b40649fa85"),
                            BirthDate = new DateTime(2008, 8, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9249),
                            CreatedAt = new DateTime(2025, 4, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "727416057",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 43"
                        },
                        new
                        {
                            Id = new Guid("1113036a-e3e9-421a-af7b-ea2999fa522f"),
                            BirthDate = new DateTime(2007, 1, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9251),
                            CreatedAt = new DateTime(2025, 4, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4044 130525",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 44"
                        },
                        new
                        {
                            Id = new Guid("ccc3f196-e3a3-456b-bc9b-ca33c1681ef3"),
                            BirthDate = new DateTime(2000, 8, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9254),
                            CreatedAt = new DateTime(2025, 4, 21, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "723793358",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 45"
                        },
                        new
                        {
                            Id = new Guid("44a9bad0-0cdd-442c-a0aa-629d75659f50"),
                            BirthDate = new DateTime(2004, 3, 7, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9256),
                            CreatedAt = new DateTime(2025, 4, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4046 110335",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 46"
                        },
                        new
                        {
                            Id = new Guid("f96588c8-2300-4d0e-bc06-975fa29aaa78"),
                            BirthDate = new DateTime(2006, 3, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9258),
                            CreatedAt = new DateTime(2025, 4, 19, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "725527535",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 47"
                        },
                        new
                        {
                            Id = new Guid("2bd2be13-ab0d-47ce-a856-85203f63f2ee"),
                            BirthDate = new DateTime(2007, 3, 12, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9260),
                            CreatedAt = new DateTime(2025, 4, 18, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4048 340799",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 48"
                        },
                        new
                        {
                            Id = new Guid("5258364d-f5fe-44b4-9317-4934ed842577"),
                            BirthDate = new DateTime(2001, 8, 9, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9263),
                            CreatedAt = new DateTime(2025, 4, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "725209610",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 49"
                        },
                        new
                        {
                            Id = new Guid("6d334bd9-69b5-488b-b50a-6bcbe1eb37bc"),
                            BirthDate = new DateTime(2009, 4, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9265),
                            CreatedAt = new DateTime(2025, 4, 16, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4050 169663",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 50"
                        },
                        new
                        {
                            Id = new Guid("d9330a13-4dd4-4b9b-a9d2-f0f44c037f72"),
                            BirthDate = new DateTime(2000, 7, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9267),
                            CreatedAt = new DateTime(2025, 4, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "724390978",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 51"
                        },
                        new
                        {
                            Id = new Guid("a3aab0b0-b136-4875-9313-512a4484c0d4"),
                            BirthDate = new DateTime(2005, 6, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9269),
                            CreatedAt = new DateTime(2025, 4, 14, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4052 820472",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 52"
                        },
                        new
                        {
                            Id = new Guid("7ab64205-2710-4772-b7df-6a0990bd3a91"),
                            BirthDate = new DateTime(2005, 2, 9, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9273),
                            CreatedAt = new DateTime(2025, 4, 13, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "724867260",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 53"
                        },
                        new
                        {
                            Id = new Guid("24b32027-3eeb-44b9-b08c-2f726484552c"),
                            BirthDate = new DateTime(2005, 2, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9274),
                            CreatedAt = new DateTime(2025, 4, 12, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4054 226610",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 54"
                        },
                        new
                        {
                            Id = new Guid("ab0bc4c9-e944-4fcc-9ec6-e7bb1cd78cca"),
                            BirthDate = new DateTime(2003, 5, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9276),
                            CreatedAt = new DateTime(2025, 4, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "725672103",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 55"
                        },
                        new
                        {
                            Id = new Guid("22610c90-ec92-4bdb-b014-be673fe71790"),
                            BirthDate = new DateTime(2008, 9, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9278),
                            CreatedAt = new DateTime(2025, 4, 10, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4056 778582",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 56"
                        },
                        new
                        {
                            Id = new Guid("34884df2-6274-4fbd-9b3c-b816b5587643"),
                            BirthDate = new DateTime(2008, 12, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9280),
                            CreatedAt = new DateTime(2025, 4, 9, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "726687600",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 57"
                        },
                        new
                        {
                            Id = new Guid("ce93746f-cc96-4849-afd6-f034f6a957c2"),
                            BirthDate = new DateTime(2008, 5, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9282),
                            CreatedAt = new DateTime(2025, 4, 8, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4058 988165",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 58"
                        },
                        new
                        {
                            Id = new Guid("03cc68b7-58ee-4cdb-b4ba-22b4613ba451"),
                            BirthDate = new DateTime(2004, 4, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9284),
                            CreatedAt = new DateTime(2025, 4, 7, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "722948394",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 59"
                        },
                        new
                        {
                            Id = new Guid("4eefab71-fa7f-4044-950c-09d01b7380cb"),
                            BirthDate = new DateTime(2007, 9, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9286),
                            CreatedAt = new DateTime(2025, 4, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4060 832215",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 60"
                        },
                        new
                        {
                            Id = new Guid("76080d87-f976-40f1-8b10-a53630284249"),
                            BirthDate = new DateTime(2007, 2, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9289),
                            CreatedAt = new DateTime(2025, 4, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "722293516",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 61"
                        },
                        new
                        {
                            Id = new Guid("e2d674f3-2707-4c10-8340-6a531c2a62c6"),
                            BirthDate = new DateTime(2002, 3, 31, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9291),
                            CreatedAt = new DateTime(2025, 4, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4062 921771",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 62"
                        },
                        new
                        {
                            Id = new Guid("cb1af63e-4fd5-4d6b-8038-de20e24f33c1"),
                            BirthDate = new DateTime(2008, 5, 13, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9293),
                            CreatedAt = new DateTime(2025, 4, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "729941372",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 63"
                        },
                        new
                        {
                            Id = new Guid("21d1fbcd-18c8-4ad8-b64d-396b877adea3"),
                            BirthDate = new DateTime(2002, 2, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9295),
                            CreatedAt = new DateTime(2025, 4, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4064 285892",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 64"
                        },
                        new
                        {
                            Id = new Guid("839a9764-2262-4c51-a9d4-7c36fec3edfd"),
                            BirthDate = new DateTime(2002, 9, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9297),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721411498",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 65"
                        },
                        new
                        {
                            Id = new Guid("8fb8a53e-62f4-4e35-a959-9c6ccbda84d0"),
                            BirthDate = new DateTime(2004, 12, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9299),
                            CreatedAt = new DateTime(2025, 3, 31, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4066 520814",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 66"
                        },
                        new
                        {
                            Id = new Guid("d31b342c-4def-49ad-bebe-cc62057107ee"),
                            BirthDate = new DateTime(2001, 1, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9301),
                            CreatedAt = new DateTime(2025, 3, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721789863",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 67"
                        },
                        new
                        {
                            Id = new Guid("c834823a-37ea-4c6b-bb14-5e4df8cc9e78"),
                            BirthDate = new DateTime(2001, 3, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9303),
                            CreatedAt = new DateTime(2025, 3, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4068 209002",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 68"
                        },
                        new
                        {
                            Id = new Guid("c3622708-8a33-4b62-9d8f-aff91cd249b4"),
                            BirthDate = new DateTime(2001, 5, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9306),
                            CreatedAt = new DateTime(2025, 3, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "725441586",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 69"
                        },
                        new
                        {
                            Id = new Guid("a339c206-3288-4d8e-8a2a-92d2c20bdbe7"),
                            BirthDate = new DateTime(2002, 11, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9308),
                            CreatedAt = new DateTime(2025, 3, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4070 258332",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 70"
                        },
                        new
                        {
                            Id = new Guid("df61318f-116e-4468-9963-c521152b59a2"),
                            BirthDate = new DateTime(2005, 8, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9310),
                            CreatedAt = new DateTime(2025, 3, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "723315504",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 71"
                        },
                        new
                        {
                            Id = new Guid("423b042e-7c45-4b70-85b6-783c49f5247b"),
                            BirthDate = new DateTime(2006, 1, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9311),
                            CreatedAt = new DateTime(2025, 3, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4072 474253",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 72"
                        },
                        new
                        {
                            Id = new Guid("a9515cf9-23ef-43c9-bf89-0e85459ca30e"),
                            BirthDate = new DateTime(2008, 5, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9313),
                            CreatedAt = new DateTime(2025, 3, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "723594045",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 73"
                        },
                        new
                        {
                            Id = new Guid("4da14c68-5f9a-4584-9ef4-415342065bda"),
                            BirthDate = new DateTime(2003, 7, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9315),
                            CreatedAt = new DateTime(2025, 3, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4074 594747",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 74"
                        },
                        new
                        {
                            Id = new Guid("f16cb390-cb00-4521-ab6f-d48b388a8515"),
                            BirthDate = new DateTime(2004, 10, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9317),
                            CreatedAt = new DateTime(2025, 3, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "723536125",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 75"
                        },
                        new
                        {
                            Id = new Guid("5d01279c-7a39-43d2-9f22-a9a03abf7049"),
                            BirthDate = new DateTime(2001, 10, 10, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9319),
                            CreatedAt = new DateTime(2025, 3, 21, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4076 706224",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 76"
                        },
                        new
                        {
                            Id = new Guid("f940fc5e-2662-476c-bf86-0be803c25af1"),
                            BirthDate = new DateTime(2004, 9, 13, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9322),
                            CreatedAt = new DateTime(2025, 3, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "723916437",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 77"
                        },
                        new
                        {
                            Id = new Guid("86a12db6-1909-4717-9e3b-7c9c57bbd524"),
                            BirthDate = new DateTime(2009, 2, 12, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9368),
                            CreatedAt = new DateTime(2025, 3, 19, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4078 666909",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 78"
                        },
                        new
                        {
                            Id = new Guid("fa4dc8f9-848a-48fd-acaa-7b8ff287c616"),
                            BirthDate = new DateTime(2004, 7, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9370),
                            CreatedAt = new DateTime(2025, 3, 18, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "724529269",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 79"
                        },
                        new
                        {
                            Id = new Guid("f9ec55d8-3dd0-46a4-9ead-999aa1bcf9ac"),
                            BirthDate = new DateTime(2001, 6, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9372),
                            CreatedAt = new DateTime(2025, 3, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4080 707263",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 80"
                        },
                        new
                        {
                            Id = new Guid("9b104526-5b82-4d34-959b-aaf0e4f87164"),
                            BirthDate = new DateTime(2008, 7, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9374),
                            CreatedAt = new DateTime(2025, 3, 16, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728944401",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 81"
                        },
                        new
                        {
                            Id = new Guid("7ebb515e-88a1-42c0-a750-4a1fc532744f"),
                            BirthDate = new DateTime(2003, 1, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9376),
                            CreatedAt = new DateTime(2025, 3, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4082 475778",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 82"
                        },
                        new
                        {
                            Id = new Guid("5fedd773-85a8-45c9-9ac0-b08f1b5a612c"),
                            BirthDate = new DateTime(2004, 6, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9378),
                            CreatedAt = new DateTime(2025, 3, 14, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "725513335",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 83"
                        },
                        new
                        {
                            Id = new Guid("2393dbfc-0a01-4a29-b3de-fec739d81173"),
                            BirthDate = new DateTime(2005, 6, 16, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9380),
                            CreatedAt = new DateTime(2025, 3, 13, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4084 367982",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 84"
                        },
                        new
                        {
                            Id = new Guid("e0dc3fc6-6321-4ffa-911d-65c72cdb1771"),
                            BirthDate = new DateTime(2001, 10, 14, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9384),
                            CreatedAt = new DateTime(2025, 3, 12, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721357622",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 85"
                        },
                        new
                        {
                            Id = new Guid("e8f92d1b-a350-43c4-bc55-24d198b5e07a"),
                            BirthDate = new DateTime(2003, 8, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9385),
                            CreatedAt = new DateTime(2025, 3, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4086 404776",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 86"
                        },
                        new
                        {
                            Id = new Guid("c2a9c6f6-2990-497f-9e90-2636b66e31f2"),
                            BirthDate = new DateTime(2007, 11, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9387),
                            CreatedAt = new DateTime(2025, 3, 10, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "722538072",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 87"
                        },
                        new
                        {
                            Id = new Guid("7c9d2f00-fee9-4d24-8e84-318c1f8bb3ab"),
                            BirthDate = new DateTime(2004, 1, 12, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9389),
                            CreatedAt = new DateTime(2025, 3, 9, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4088 182878",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 88"
                        },
                        new
                        {
                            Id = new Guid("b4f44439-2a0c-440b-86d9-4806748d4dd8"),
                            BirthDate = new DateTime(2009, 10, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9391),
                            CreatedAt = new DateTime(2025, 3, 8, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "726227710",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 89"
                        },
                        new
                        {
                            Id = new Guid("8f6f160e-757c-4355-804a-bd68aa520b63"),
                            BirthDate = new DateTime(2001, 6, 21, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9393),
                            CreatedAt = new DateTime(2025, 3, 7, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4090 252827",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 90"
                        },
                        new
                        {
                            Id = new Guid("67210f02-c3fc-4e57-a3d0-c411240899b5"),
                            BirthDate = new DateTime(2009, 6, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9395),
                            CreatedAt = new DateTime(2025, 3, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728923793",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 91"
                        },
                        new
                        {
                            Id = new Guid("e285ef3a-3fe8-4615-b844-af5f98f0aaad"),
                            BirthDate = new DateTime(2007, 7, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9397),
                            CreatedAt = new DateTime(2025, 3, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4092 556195",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 92"
                        },
                        new
                        {
                            Id = new Guid("eb92c96e-f674-4baa-a536-1a9390a5b8af"),
                            BirthDate = new DateTime(2000, 7, 8, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9400),
                            CreatedAt = new DateTime(2025, 3, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "721035168",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 93"
                        },
                        new
                        {
                            Id = new Guid("54e8c984-3688-427d-82f3-0c18f5d8b14a"),
                            BirthDate = new DateTime(2006, 9, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9402),
                            CreatedAt = new DateTime(2025, 3, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4094 228242",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 94"
                        },
                        new
                        {
                            Id = new Guid("7519c93a-10f9-4a24-a811-2b57222f88a6"),
                            BirthDate = new DateTime(2000, 7, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9404),
                            CreatedAt = new DateTime(2025, 3, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728245472",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 95"
                        },
                        new
                        {
                            Id = new Guid("b7c085ea-5dda-4f9b-b6fc-a284327ec0d5"),
                            BirthDate = new DateTime(2005, 3, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9406),
                            CreatedAt = new DateTime(2025, 3, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4096 707533",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 96"
                        },
                        new
                        {
                            Id = new Guid("78073e63-3234-471c-a132-4ba128b2762d"),
                            BirthDate = new DateTime(2004, 8, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9408),
                            CreatedAt = new DateTime(2025, 2, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "722480874",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 97"
                        },
                        new
                        {
                            Id = new Guid("0912fcc3-1750-49b4-8e66-c73244253b53"),
                            BirthDate = new DateTime(2006, 12, 31, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9410),
                            CreatedAt = new DateTime(2025, 2, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "4098 514913",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 98"
                        },
                        new
                        {
                            Id = new Guid("a6030668-a3d7-4499-9d7f-46d674e0d000"),
                            BirthDate = new DateTime(2004, 8, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9411),
                            CreatedAt = new DateTime(2025, 2, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "728720867",
                            DocumentType = "foreignPassport",
                            FullName = "Участник Херсонеса 99"
                        },
                        new
                        {
                            Id = new Guid("93596350-bc43-41c1-8a7c-5b88aff62a7d"),
                            BirthDate = new DateTime(2004, 10, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9413),
                            CreatedAt = new DateTime(2025, 2, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            DocumentNumber = "40100 778256",
                            DocumentType = "passport",
                            FullName = "Участник Херсонеса 100"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TicketsCount")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            CreatedAt = new DateTime(2025, 5, 16, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по экскурсия по древнему херсонесу",
                            EndTime = new DateTime(2025, 5, 26, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 1200m,
                            StartTime = new DateTime(2025, 5, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Экскурсия по древнему Херсонесу"
                        },
                        new
                        {
                            Id = new Guid("36d5f51f-2901-48f8-935c-cc4659a87b9a"),
                            CreatedAt = new DateTime(2025, 5, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по секреты раскопок в херсонесе",
                            EndTime = new DateTime(2025, 5, 27, 13, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 1350m,
                            StartTime = new DateTime(2025, 5, 27, 11, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Секреты раскопок в Херсонесе"
                        },
                        new
                        {
                            Id = new Guid("0f95718b-6ae2-45e9-94e4-59a1859d0df6"),
                            CreatedAt = new DateTime(2025, 5, 18, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по археологические находки херсонеса",
                            EndTime = new DateTime(2025, 5, 28, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 1500m,
                            StartTime = new DateTime(2025, 5, 28, 12, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Археологические находки Херсонеса"
                        },
                        new
                        {
                            Id = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            CreatedAt = new DateTime(2025, 5, 19, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по вечерний херсонес",
                            EndTime = new DateTime(2025, 5, 29, 15, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 1650m,
                            StartTime = new DateTime(2025, 5, 29, 13, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Вечерний Херсонес"
                        },
                        new
                        {
                            Id = new Guid("09aa57dd-aa27-459e-8986-c2e50ba1def1"),
                            CreatedAt = new DateTime(2025, 5, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по античный театр херсонеса",
                            EndTime = new DateTime(2025, 5, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 1800m,
                            StartTime = new DateTime(2025, 5, 30, 10, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Античный театр Херсонеса"
                        },
                        new
                        {
                            Id = new Guid("8556a549-9839-459c-8c42-431ecfab013c"),
                            CreatedAt = new DateTime(2025, 5, 21, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по история христианства в херсонесе",
                            EndTime = new DateTime(2025, 5, 31, 13, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 1950m,
                            StartTime = new DateTime(2025, 5, 31, 11, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "История христианства в Херсонесе"
                        },
                        new
                        {
                            Id = new Guid("02eaf3b4-f5a4-4627-9bd3-c27a4fe6a971"),
                            CreatedAt = new DateTime(2025, 5, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по херсонес и византия",
                            EndTime = new DateTime(2025, 6, 1, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 2100m,
                            StartTime = new DateTime(2025, 6, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Херсонес и Византия"
                        },
                        new
                        {
                            Id = new Guid("d1f20b27-983e-401c-8ba4-a313c44fdcb2"),
                            CreatedAt = new DateTime(2025, 5, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по подземелья херсонеса",
                            EndTime = new DateTime(2025, 6, 2, 15, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 2250m,
                            StartTime = new DateTime(2025, 6, 2, 13, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Подземелья Херсонеса"
                        },
                        new
                        {
                            Id = new Guid("db8838f7-22f5-4828-833e-4c665c82aaf8"),
                            CreatedAt = new DateTime(2025, 5, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по башни и укрепления херсонеса",
                            EndTime = new DateTime(2025, 6, 3, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 2400m,
                            StartTime = new DateTime(2025, 6, 3, 10, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Башни и укрепления Херсонеса"
                        },
                        new
                        {
                            Id = new Guid("6c482e64-c94e-45be-83e2-84a10f349268"),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Description = "Увлекательная экскурсия по мозаики и фрески херсонеса",
                            EndTime = new DateTime(2025, 6, 4, 13, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Location = "Новый Херсонес, Севастополь",
                            Price = 2550m,
                            StartTime = new DateTime(2025, 6, 4, 11, 0, 0, 0, DateTimeKind.Utc),
                            Tag = "excursion",
                            TicketsCount = 20,
                            Title = "Мозаики и фрески Херсонеса"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("EntityTarget")
                        .HasColumnType("text");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocalOrderRank")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Core.Model.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("QrUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72fd5b0f-268d-48f0-8d26-2b9f0af0027d"),
                            Amount = 3600m,
                            BuyerId = new Guid("fcf945fc-330d-47e8-9063-53ad58a60f02"),
                            CreatedAt = new DateTime(2025, 5, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 5, 28, 8, 19, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/72fd5b0f-268d-48f0-8d26-2b9f0af0027d",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("8c8ac7d1-64d2-4be1-a7f1-6e197f74b621"),
                            Amount = 3000m,
                            BuyerId = new Guid("2d708e3b-86c5-4250-9da0-6d1dad8a1fb1"),
                            CreatedAt = new DateTime(2025, 5, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 5, 29, 8, 36, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/8c8ac7d1-64d2-4be1-a7f1-6e197f74b621",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("0d2036e6-a0a8-49e2-8328-b935b97d22d5"),
                            Amount = 3150m,
                            BuyerId = new Guid("fcf945fc-330d-47e8-9063-53ad58a60f02"),
                            CreatedAt = new DateTime(2025, 5, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 5, 30, 8, 14, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/0d2036e6-a0a8-49e2-8328-b935b97d22d5",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("1f04d6ee-7670-441d-b44d-97ac8b03a226"),
                            Amount = 3600m,
                            BuyerId = new Guid("967421c3-789f-494d-9e3d-054d2d82ff99"),
                            CreatedAt = new DateTime(2025, 5, 31, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 5, 31, 8, 14, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/1f04d6ee-7670-441d-b44d-97ac8b03a226",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("f5ffb61f-b609-4a09-bdd7-205a853ae4ea"),
                            Amount = 3450m,
                            BuyerId = new Guid("ed64b557-ebd8-4c7b-9d21-db37ccba4fde"),
                            CreatedAt = new DateTime(2025, 6, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 6, 1, 8, 22, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/f5ffb61f-b609-4a09-bdd7-205a853ae4ea",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("61af8998-b6bc-4c82-ad14-4e95640abf94"),
                            Amount = 4800m,
                            BuyerId = new Guid("a3c19eb8-c2e6-496d-b120-2549c873f82d"),
                            CreatedAt = new DateTime(2025, 6, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 6, 2, 8, 15, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/61af8998-b6bc-4c82-ad14-4e95640abf94",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("5841bf3c-07a3-42a3-a663-364350c8e7b9"),
                            Amount = 3150m,
                            BuyerId = new Guid("07f86dd6-31c2-46a4-bdae-e63439b0fadb"),
                            CreatedAt = new DateTime(2025, 6, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 6, 3, 8, 15, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/5841bf3c-07a3-42a3-a663-364350c8e7b9",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("2c93b3a9-ba6c-41f8-b723-1a6e6b40d237"),
                            Amount = 1200m,
                            BuyerId = new Guid("ed64b557-ebd8-4c7b-9d21-db37ccba4fde"),
                            CreatedAt = new DateTime(2025, 6, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 6, 4, 8, 29, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/2c93b3a9-ba6c-41f8-b723-1a6e6b40d237",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("83ff7b26-f173-4c54-8da4-aca1b8769cbc"),
                            Amount = 0m,
                            BuyerId = new Guid("a3c19eb8-c2e6-496d-b120-2549c873f82d"),
                            CreatedAt = new DateTime(2025, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 6, 5, 8, 18, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/83ff7b26-f173-4c54-8da4-aca1b8769cbc",
                            Status = "Successed"
                        },
                        new
                        {
                            Id = new Guid("a4acb483-c395-474b-9c52-46275854b458"),
                            Amount = 0m,
                            BuyerId = new Guid("1ac15591-b7af-41ea-bd1f-e9eb30045f3c"),
                            CreatedAt = new DateTime(2025, 6, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            PaidAt = new DateTime(2025, 6, 6, 8, 34, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            QrUrl = "https://payment.example.com/a4acb483-c395-474b-9c52-46275854b458",
                            Status = "Successed"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AttendeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uuid");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("EventId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("349c1601-f5eb-4615-9cca-4ced7ae8b691"),
                            AttendeeId = new Guid("93596350-bc43-41c1-8a7c-5b88aff62a7d"),
                            EventId = new Guid("09aa57dd-aa27-459e-8986-c2e50ba1def1"),
                            PaymentId = new Guid("72fd5b0f-268d-48f0-8d26-2b9f0af0027d"),
                            QRCode = "HXN09aa57dd000"
                        },
                        new
                        {
                            Id = new Guid("3927bfeb-b118-4b29-95a4-83056fd982a1"),
                            AttendeeId = new Guid("24b32027-3eeb-44b9-b08c-2f726484552c"),
                            EventId = new Guid("09aa57dd-aa27-459e-8986-c2e50ba1def1"),
                            PaymentId = new Guid("72fd5b0f-268d-48f0-8d26-2b9f0af0027d"),
                            QRCode = "HXN09aa57dd001"
                        },
                        new
                        {
                            Id = new Guid("2fe2a5eb-28b4-4539-ac73-98ffc5b78215"),
                            AttendeeId = new Guid("bd201d85-0b77-4acf-bdaf-8999cd56f8e7"),
                            EventId = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            PaymentId = new Guid("8c8ac7d1-64d2-4be1-a7f1-6e197f74b621"),
                            QRCode = "HXNff797b66002"
                        },
                        new
                        {
                            Id = new Guid("82e667c7-af93-42d4-bc9b-55fe8b3e0802"),
                            AttendeeId = new Guid("f6e87243-74ad-41b7-b08c-d6bc91859939"),
                            EventId = new Guid("36d5f51f-2901-48f8-935c-cc4659a87b9a"),
                            PaymentId = new Guid("8c8ac7d1-64d2-4be1-a7f1-6e197f74b621"),
                            QRCode = "HXN36d5f51f003"
                        },
                        new
                        {
                            Id = new Guid("fe1d60bf-1bf3-4597-9088-8ea1f8bab0a2"),
                            AttendeeId = new Guid("5e4c88bd-5eca-4ed5-b864-9cd5d6d7e865"),
                            EventId = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            PaymentId = new Guid("0d2036e6-a0a8-49e2-8328-b935b97d22d5"),
                            QRCode = "HXN3ee92ac8004"
                        },
                        new
                        {
                            Id = new Guid("76ca117c-4443-4504-bf0b-b43c1894523c"),
                            AttendeeId = new Guid("5258364d-f5fe-44b4-9317-4934ed842577"),
                            EventId = new Guid("8556a549-9839-459c-8c42-431ecfab013c"),
                            PaymentId = new Guid("0d2036e6-a0a8-49e2-8328-b935b97d22d5"),
                            QRCode = "HXN8556a549005"
                        },
                        new
                        {
                            Id = new Guid("6b60147c-81cf-4397-b3cb-b15bb8a91dc8"),
                            AttendeeId = new Guid("c2a9c6f6-2990-497f-9e90-2636b66e31f2"),
                            EventId = new Guid("09aa57dd-aa27-459e-8986-c2e50ba1def1"),
                            PaymentId = new Guid("1f04d6ee-7670-441d-b44d-97ac8b03a226"),
                            QRCode = "HXN09aa57dd006"
                        },
                        new
                        {
                            Id = new Guid("5271d95a-f3c2-49f7-b02b-4cbdebd9e0a6"),
                            AttendeeId = new Guid("cb1af63e-4fd5-4d6b-8038-de20e24f33c1"),
                            EventId = new Guid("09aa57dd-aa27-459e-8986-c2e50ba1def1"),
                            PaymentId = new Guid("1f04d6ee-7670-441d-b44d-97ac8b03a226"),
                            QRCode = "HXN09aa57dd007"
                        },
                        new
                        {
                            Id = new Guid("424bae95-cea6-4c7d-bab1-107185d3cc36"),
                            AttendeeId = new Guid("2cd8ae16-5402-48cb-bbfd-f1f3ffea766e"),
                            EventId = new Guid("36d5f51f-2901-48f8-935c-cc4659a87b9a"),
                            PaymentId = new Guid("f5ffb61f-b609-4a09-bdd7-205a853ae4ea"),
                            QRCode = "HXN36d5f51f008"
                        },
                        new
                        {
                            Id = new Guid("8ba1ba6f-e6bc-4321-aaa6-b232a65c7ccc"),
                            AttendeeId = new Guid("4da14c68-5f9a-4584-9ef4-415342065bda"),
                            EventId = new Guid("02eaf3b4-f5a4-4627-9bd3-c27a4fe6a971"),
                            PaymentId = new Guid("f5ffb61f-b609-4a09-bdd7-205a853ae4ea"),
                            QRCode = "HXN02eaf3b4009"
                        },
                        new
                        {
                            Id = new Guid("89dbeb85-721f-44ad-9989-d97c10ae5eed"),
                            AttendeeId = new Guid("44a9bad0-0cdd-442c-a0aa-629d75659f50"),
                            EventId = new Guid("d1f20b27-983e-401c-8ba4-a313c44fdcb2"),
                            PaymentId = new Guid("61af8998-b6bc-4c82-ad14-4e95640abf94"),
                            QRCode = "HXNd1f20b27010"
                        },
                        new
                        {
                            Id = new Guid("28b6e087-3b34-47d0-a064-915a29e719d8"),
                            AttendeeId = new Guid("7519c93a-10f9-4a24-a811-2b57222f88a6"),
                            EventId = new Guid("6c482e64-c94e-45be-83e2-84a10f349268"),
                            PaymentId = new Guid("61af8998-b6bc-4c82-ad14-4e95640abf94"),
                            QRCode = "HXN6c482e64011"
                        },
                        new
                        {
                            Id = new Guid("7689250a-1290-4d65-b711-2b7318cfe77c"),
                            AttendeeId = new Guid("897c170f-cb3a-4714-80ac-d557e8e24c8d"),
                            EventId = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            PaymentId = new Guid("5841bf3c-07a3-42a3-a663-364350c8e7b9"),
                            QRCode = "HXN3ee92ac8012"
                        },
                        new
                        {
                            Id = new Guid("06dc7eb6-9a34-4cdb-bc3e-d3c405509b8c"),
                            AttendeeId = new Guid("76080d87-f976-40f1-8b10-a53630284249"),
                            EventId = new Guid("8556a549-9839-459c-8c42-431ecfab013c"),
                            PaymentId = new Guid("5841bf3c-07a3-42a3-a663-364350c8e7b9"),
                            QRCode = "HXN8556a549013"
                        },
                        new
                        {
                            Id = new Guid("88fa4234-1e8f-407a-97ef-58f83db05c35"),
                            AttendeeId = new Guid("423b042e-7c45-4b70-85b6-783c49f5247b"),
                            EventId = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            PaymentId = new Guid("2c93b3a9-ba6c-41f8-b723-1a6e6b40d237"),
                            QRCode = "HXN3ee92ac8014"
                        },
                        new
                        {
                            Id = new Guid("da11fc38-518c-43b1-9a43-010075c4ef4c"),
                            EventId = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            QRCode = "HXNff797b66015"
                        },
                        new
                        {
                            Id = new Guid("1abbbc89-996d-4528-8746-413b25d1af33"),
                            EventId = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            QRCode = "HXN3ee92ac8016"
                        },
                        new
                        {
                            Id = new Guid("61320869-6d89-4f09-bf11-3c25b65f5e69"),
                            EventId = new Guid("0f95718b-6ae2-45e9-94e4-59a1859d0df6"),
                            QRCode = "HXN0f95718b017"
                        },
                        new
                        {
                            Id = new Guid("53fff942-b214-4bf8-b4aa-066443cefd3e"),
                            EventId = new Guid("0f95718b-6ae2-45e9-94e4-59a1859d0df6"),
                            QRCode = "HXN0f95718b018"
                        },
                        new
                        {
                            Id = new Guid("b62715e8-65e6-4e82-a9cb-f5e91f6f3963"),
                            EventId = new Guid("6c482e64-c94e-45be-83e2-84a10f349268"),
                            QRCode = "HXN6c482e64019"
                        },
                        new
                        {
                            Id = new Guid("47de7285-ba82-420b-9f6e-0c39cfa58258"),
                            EventId = new Guid("0f95718b-6ae2-45e9-94e4-59a1859d0df6"),
                            QRCode = "HXN0f95718b020"
                        },
                        new
                        {
                            Id = new Guid("b3e455d5-ab1c-4d3d-aed0-0772077336a8"),
                            EventId = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            QRCode = "HXNff797b66021"
                        },
                        new
                        {
                            Id = new Guid("fb957e1e-45b6-483c-b293-246d40170105"),
                            EventId = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            QRCode = "HXN3ee92ac8022"
                        },
                        new
                        {
                            Id = new Guid("9fc2db3a-84eb-434e-a25e-f3633d50c5a2"),
                            EventId = new Guid("8556a549-9839-459c-8c42-431ecfab013c"),
                            QRCode = "HXN8556a549023"
                        },
                        new
                        {
                            Id = new Guid("46e292b7-a890-430d-89c8-49bdaff73898"),
                            EventId = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            QRCode = "HXN3ee92ac8024"
                        },
                        new
                        {
                            Id = new Guid("f8140527-48f5-4415-9c01-53d5c7578bb8"),
                            EventId = new Guid("8556a549-9839-459c-8c42-431ecfab013c"),
                            QRCode = "HXN8556a549025"
                        },
                        new
                        {
                            Id = new Guid("8bc9ee75-43e5-457d-857b-efd85ec89dae"),
                            EventId = new Guid("d1f20b27-983e-401c-8ba4-a313c44fdcb2"),
                            QRCode = "HXNd1f20b27026"
                        },
                        new
                        {
                            Id = new Guid("79ce1058-eec7-4438-84e1-94dbec804eef"),
                            EventId = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            QRCode = "HXNff797b66027"
                        },
                        new
                        {
                            Id = new Guid("d34cc5c1-1a2b-4729-b0e7-abdc0253d3a1"),
                            EventId = new Guid("36d5f51f-2901-48f8-935c-cc4659a87b9a"),
                            QRCode = "HXN36d5f51f028"
                        },
                        new
                        {
                            Id = new Guid("1b2dba02-1f1d-4f33-a7da-c8348a8eb308"),
                            EventId = new Guid("d1f20b27-983e-401c-8ba4-a313c44fdcb2"),
                            QRCode = "HXNd1f20b27029"
                        },
                        new
                        {
                            Id = new Guid("a80b1da8-448c-4591-b72b-f6750f719b18"),
                            EventId = new Guid("db8838f7-22f5-4828-833e-4c665c82aaf8"),
                            QRCode = "HXNdb8838f7030"
                        },
                        new
                        {
                            Id = new Guid("2bf94cc6-95c4-4c84-8465-2c15b8b32953"),
                            EventId = new Guid("36d5f51f-2901-48f8-935c-cc4659a87b9a"),
                            QRCode = "HXN36d5f51f031"
                        },
                        new
                        {
                            Id = new Guid("fd6ca7c6-eebb-48e7-8cd9-1db36cbb2641"),
                            EventId = new Guid("36d5f51f-2901-48f8-935c-cc4659a87b9a"),
                            QRCode = "HXN36d5f51f032"
                        },
                        new
                        {
                            Id = new Guid("b39a0cd2-2aba-47d3-b87a-3596ee0d1461"),
                            EventId = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            QRCode = "HXNff797b66033"
                        },
                        new
                        {
                            Id = new Guid("f7e57a7e-1a3d-49e6-aa21-cdd82a26020c"),
                            EventId = new Guid("02eaf3b4-f5a4-4627-9bd3-c27a4fe6a971"),
                            QRCode = "HXN02eaf3b4034"
                        },
                        new
                        {
                            Id = new Guid("d2541279-e665-472f-ba72-03f1f0327ca3"),
                            EventId = new Guid("36d5f51f-2901-48f8-935c-cc4659a87b9a"),
                            QRCode = "HXN36d5f51f035"
                        },
                        new
                        {
                            Id = new Guid("012d1013-c7f4-4a73-9570-577909dea7a6"),
                            EventId = new Guid("db8838f7-22f5-4828-833e-4c665c82aaf8"),
                            QRCode = "HXNdb8838f7036"
                        },
                        new
                        {
                            Id = new Guid("0da9f261-f283-417f-a1f2-2286f6fa7be4"),
                            EventId = new Guid("db8838f7-22f5-4828-833e-4c665c82aaf8"),
                            QRCode = "HXNdb8838f7037"
                        },
                        new
                        {
                            Id = new Guid("57bcd65f-cd10-4ab4-a318-61bb1ca54ad8"),
                            EventId = new Guid("0f95718b-6ae2-45e9-94e4-59a1859d0df6"),
                            QRCode = "HXN0f95718b038"
                        },
                        new
                        {
                            Id = new Guid("5483abbb-a812-425f-8a46-bdcc1ae360f9"),
                            EventId = new Guid("02eaf3b4-f5a4-4627-9bd3-c27a4fe6a971"),
                            QRCode = "HXN02eaf3b4039"
                        },
                        new
                        {
                            Id = new Guid("3206959f-be17-4b4b-86ff-aca861af1ba3"),
                            EventId = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            QRCode = "HXNff797b66040"
                        },
                        new
                        {
                            Id = new Guid("0e505fce-7d17-4d4d-83c0-5f81b76b06e5"),
                            EventId = new Guid("09aa57dd-aa27-459e-8986-c2e50ba1def1"),
                            QRCode = "HXN09aa57dd041"
                        },
                        new
                        {
                            Id = new Guid("9c40d1ad-d3bf-497c-934c-50a5a3508e1d"),
                            EventId = new Guid("09aa57dd-aa27-459e-8986-c2e50ba1def1"),
                            QRCode = "HXN09aa57dd042"
                        },
                        new
                        {
                            Id = new Guid("1c2d5552-742b-4f45-81dd-fcd57a7285c5"),
                            EventId = new Guid("6c482e64-c94e-45be-83e2-84a10f349268"),
                            QRCode = "HXN6c482e64043"
                        },
                        new
                        {
                            Id = new Guid("c68f80e1-b6d5-4192-afde-88e9faa894ec"),
                            EventId = new Guid("d1f20b27-983e-401c-8ba4-a313c44fdcb2"),
                            QRCode = "HXNd1f20b27044"
                        },
                        new
                        {
                            Id = new Guid("730c7216-df6a-4861-a68c-ef92f765d7e0"),
                            EventId = new Guid("0f95718b-6ae2-45e9-94e4-59a1859d0df6"),
                            QRCode = "HXN0f95718b045"
                        },
                        new
                        {
                            Id = new Guid("b1476aea-bef4-4c35-9000-5178c7aa571e"),
                            EventId = new Guid("db8838f7-22f5-4828-833e-4c665c82aaf8"),
                            QRCode = "HXNdb8838f7046"
                        },
                        new
                        {
                            Id = new Guid("e41bd4a6-f71a-4439-8445-b08d24a2316d"),
                            EventId = new Guid("3ee92ac8-8a39-41ce-ad25-447f7bda6b02"),
                            QRCode = "HXN3ee92ac8047"
                        },
                        new
                        {
                            Id = new Guid("5ba4bc2c-a484-40cf-8478-f38b171308aa"),
                            EventId = new Guid("ff797b66-7c97-4a88-94dd-c97f7673f554"),
                            QRCode = "HXNff797b66048"
                        },
                        new
                        {
                            Id = new Guid("0d6db7f0-4303-4e7b-9e05-e41ed24c93aa"),
                            EventId = new Guid("0f95718b-6ae2-45e9-94e4-59a1859d0df6"),
                            QRCode = "HXN0f95718b049"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d102d1e9-3eb8-4efe-8587-7b1e970f3f54"),
                            BirthDate = new DateTime(1984, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8905),
                            CreatedAt = new DateTime(2025, 4, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest1@example.com",
                            FullName = "Гость Херсонеса 1",
                            PasswordHash = "hash123",
                            Phone = "+79780000001",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("fcf945fc-330d-47e8-9063-53ad58a60f02"),
                            BirthDate = new DateTime(1989, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8915),
                            CreatedAt = new DateTime(2025, 4, 18, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest2@example.com",
                            FullName = "Гость Херсонеса 2",
                            PasswordHash = "hash123",
                            Phone = "+79780000002",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("57c50cfa-4e8b-4617-a072-1fab54c6923a"),
                            BirthDate = new DateTime(1987, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8919),
                            CreatedAt = new DateTime(2025, 4, 19, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest3@example.com",
                            FullName = "Гость Херсонеса 3",
                            PasswordHash = "hash123",
                            Phone = "+79780000003",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("3c496081-ee25-41d8-ab23-b64ff3185bed"),
                            BirthDate = new DateTime(1970, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8922),
                            CreatedAt = new DateTime(2025, 4, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest4@example.com",
                            FullName = "Гость Херсонеса 4",
                            PasswordHash = "hash123",
                            Phone = "+79780000004",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("07f86dd6-31c2-46a4-bdae-e63439b0fadb"),
                            BirthDate = new DateTime(1970, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8924),
                            CreatedAt = new DateTime(2025, 4, 21, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest5@example.com",
                            FullName = "Гость Херсонеса 5",
                            PasswordHash = "hash123",
                            Phone = "+79780000005",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("47ce4d6c-e3de-4b93-a2d5-86a71c0e0c70"),
                            BirthDate = new DateTime(1992, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8927),
                            CreatedAt = new DateTime(2025, 4, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest6@example.com",
                            FullName = "Гость Херсонеса 6",
                            PasswordHash = "hash123",
                            Phone = "+79780000006",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("8f526831-2f49-4a2f-9084-0c14c6b1c2cc"),
                            BirthDate = new DateTime(1994, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8930),
                            CreatedAt = new DateTime(2025, 4, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest7@example.com",
                            FullName = "Гость Херсонеса 7",
                            PasswordHash = "hash123",
                            Phone = "+79780000007",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6d931cfc-0da6-421a-9cf5-774c4459c88c"),
                            BirthDate = new DateTime(1974, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8932),
                            CreatedAt = new DateTime(2025, 4, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest8@example.com",
                            FullName = "Гость Херсонеса 8",
                            PasswordHash = "hash123",
                            Phone = "+79780000008",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("f1cfdefa-8c7d-4c0d-af96-a133c763daa6"),
                            BirthDate = new DateTime(1990, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8934),
                            CreatedAt = new DateTime(2025, 4, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest9@example.com",
                            FullName = "Гость Херсонеса 9",
                            PasswordHash = "hash123",
                            Phone = "+79780000009",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("d612962f-314b-4531-9be4-5eeed966438f"),
                            BirthDate = new DateTime(1973, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8941),
                            CreatedAt = new DateTime(2025, 4, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest10@example.com",
                            FullName = "Гость Херсонеса 10",
                            PasswordHash = "hash123",
                            Phone = "+79780000010",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("494ecf8a-2336-4a15-916a-6b89d5cf3359"),
                            BirthDate = new DateTime(1998, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8943),
                            CreatedAt = new DateTime(2025, 4, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest11@example.com",
                            FullName = "Гость Херсонеса 11",
                            PasswordHash = "hash123",
                            Phone = "+79780000011",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("1de8f90d-9bc4-4959-8a04-89a36c88759b"),
                            BirthDate = new DateTime(1991, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8945),
                            CreatedAt = new DateTime(2025, 4, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest12@example.com",
                            FullName = "Гость Херсонеса 12",
                            PasswordHash = "hash123",
                            Phone = "+79780000012",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("56a5feab-1970-4131-99c1-c1bfa0241f52"),
                            BirthDate = new DateTime(1997, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8947),
                            CreatedAt = new DateTime(2025, 4, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest13@example.com",
                            FullName = "Гость Херсонеса 13",
                            PasswordHash = "hash123",
                            Phone = "+79780000013",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("2d708e3b-86c5-4250-9da0-6d1dad8a1fb1"),
                            BirthDate = new DateTime(1969, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8949),
                            CreatedAt = new DateTime(2025, 4, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest14@example.com",
                            FullName = "Гость Херсонеса 14",
                            PasswordHash = "hash123",
                            Phone = "+79780000014",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("9a48cefa-08c0-4412-a4c6-0c3418081ad6"),
                            BirthDate = new DateTime(1999, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8952),
                            CreatedAt = new DateTime(2025, 5, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest15@example.com",
                            FullName = "Гость Херсонеса 15",
                            PasswordHash = "hash123",
                            Phone = "+79780000015",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("c3e429a0-fccc-4a99-b089-9b85423febc2"),
                            BirthDate = new DateTime(2006, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8953),
                            CreatedAt = new DateTime(2025, 5, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest16@example.com",
                            FullName = "Гость Херсонеса 16",
                            PasswordHash = "hash123",
                            Phone = "+79780000016",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("967421c3-789f-494d-9e3d-054d2d82ff99"),
                            BirthDate = new DateTime(1984, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8956),
                            CreatedAt = new DateTime(2025, 5, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest17@example.com",
                            FullName = "Гость Херсонеса 17",
                            PasswordHash = "hash123",
                            Phone = "+79780000017",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6f9e81f8-2975-4134-803f-2678781d77bf"),
                            BirthDate = new DateTime(1995, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8960),
                            CreatedAt = new DateTime(2025, 5, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest18@example.com",
                            FullName = "Гость Херсонеса 18",
                            PasswordHash = "hash123",
                            Phone = "+79780000018",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("1ac15591-b7af-41ea-bd1f-e9eb30045f3c"),
                            BirthDate = new DateTime(2005, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8962),
                            CreatedAt = new DateTime(2025, 5, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest19@example.com",
                            FullName = "Гость Херсонеса 19",
                            PasswordHash = "hash123",
                            Phone = "+79780000019",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("35954b2d-2a15-41db-bc2e-d32ea1a4f17e"),
                            BirthDate = new DateTime(1969, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8964),
                            CreatedAt = new DateTime(2025, 5, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest20@example.com",
                            FullName = "Гость Херсонеса 20",
                            PasswordHash = "hash123",
                            Phone = "+79780000020",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("275645e3-7b30-4cba-8ffb-9659a2e2d07a"),
                            BirthDate = new DateTime(2001, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8966),
                            CreatedAt = new DateTime(2025, 5, 7, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest21@example.com",
                            FullName = "Гость Херсонеса 21",
                            PasswordHash = "hash123",
                            Phone = "+79780000021",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("f0b397ad-df69-434a-a1ac-71eee3b3e0d1"),
                            BirthDate = new DateTime(2000, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8968),
                            CreatedAt = new DateTime(2025, 5, 8, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest22@example.com",
                            FullName = "Гость Херсонеса 22",
                            PasswordHash = "hash123",
                            Phone = "+79780000022",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("9246f8b7-36a7-4a1f-8056-32536381e0f6"),
                            BirthDate = new DateTime(1993, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8971),
                            CreatedAt = new DateTime(2025, 5, 9, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest23@example.com",
                            FullName = "Гость Херсонеса 23",
                            PasswordHash = "hash123",
                            Phone = "+79780000023",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("5a02dc80-2072-4e43-81e7-21d0ec8b1456"),
                            BirthDate = new DateTime(1979, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8973),
                            CreatedAt = new DateTime(2025, 5, 10, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest24@example.com",
                            FullName = "Гость Херсонеса 24",
                            PasswordHash = "hash123",
                            Phone = "+79780000024",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("2a8c63ea-f715-4732-b952-5ed8bcdc5e3f"),
                            BirthDate = new DateTime(2004, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9008),
                            CreatedAt = new DateTime(2025, 5, 11, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest25@example.com",
                            FullName = "Гость Херсонеса 25",
                            PasswordHash = "hash123",
                            Phone = "+79780000025",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("2df07da0-f57b-4145-aab8-5bbf419aad83"),
                            BirthDate = new DateTime(1996, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9011),
                            CreatedAt = new DateTime(2025, 5, 12, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest26@example.com",
                            FullName = "Гость Херсонеса 26",
                            PasswordHash = "hash123",
                            Phone = "+79780000026",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("5e62fdea-553c-42e8-87a9-8e26ab709158"),
                            BirthDate = new DateTime(1975, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9014),
                            CreatedAt = new DateTime(2025, 5, 13, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest27@example.com",
                            FullName = "Гость Херсонеса 27",
                            PasswordHash = "hash123",
                            Phone = "+79780000027",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("cbf6ac64-dd14-468b-8f36-0d2a3a0073e9"),
                            BirthDate = new DateTime(1985, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9016),
                            CreatedAt = new DateTime(2025, 5, 14, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest28@example.com",
                            FullName = "Гость Херсонеса 28",
                            PasswordHash = "hash123",
                            Phone = "+79780000028",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("71fae49a-cf25-4da9-a772-9a0c7205a02d"),
                            BirthDate = new DateTime(1997, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9018),
                            CreatedAt = new DateTime(2025, 5, 15, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest29@example.com",
                            FullName = "Гость Херсонеса 29",
                            PasswordHash = "hash123",
                            Phone = "+79780000029",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("84566a54-a053-4490-9469-f5a02a35a171"),
                            BirthDate = new DateTime(1990, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9020),
                            CreatedAt = new DateTime(2025, 5, 16, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest30@example.com",
                            FullName = "Гость Херсонеса 30",
                            PasswordHash = "hash123",
                            Phone = "+79780000030",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("b5d7b089-eaa0-4267-b578-ba2008cc9c23"),
                            BirthDate = new DateTime(1983, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9022),
                            CreatedAt = new DateTime(2025, 5, 17, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest31@example.com",
                            FullName = "Гость Херсонеса 31",
                            PasswordHash = "hash123",
                            Phone = "+79780000031",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("4b6d2557-7d3e-4a73-b93d-189d275238e5"),
                            BirthDate = new DateTime(1984, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9024),
                            CreatedAt = new DateTime(2025, 5, 18, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest32@example.com",
                            FullName = "Гость Херсонеса 32",
                            PasswordHash = "hash123",
                            Phone = "+79780000032",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("054ed04e-f830-42c6-89f6-3a9604b24289"),
                            BirthDate = new DateTime(1993, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9026),
                            CreatedAt = new DateTime(2025, 5, 19, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest33@example.com",
                            FullName = "Гость Херсонеса 33",
                            PasswordHash = "hash123",
                            Phone = "+79780000033",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("a3e0dcf0-36ce-4fa5-8df6-b6c9db15acdf"),
                            BirthDate = new DateTime(2004, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9030),
                            CreatedAt = new DateTime(2025, 5, 20, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest34@example.com",
                            FullName = "Гость Херсонеса 34",
                            PasswordHash = "hash123",
                            Phone = "+79780000034",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("5891b767-ebb0-482b-9262-5ffc0276de83"),
                            BirthDate = new DateTime(1989, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9032),
                            CreatedAt = new DateTime(2025, 5, 21, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest35@example.com",
                            FullName = "Гость Херсонеса 35",
                            PasswordHash = "hash123",
                            Phone = "+79780000035",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("754485c9-6fe9-4575-8552-3951e0838dfd"),
                            BirthDate = new DateTime(1987, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9035),
                            CreatedAt = new DateTime(2025, 5, 22, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest36@example.com",
                            FullName = "Гость Херсонеса 36",
                            PasswordHash = "hash123",
                            Phone = "+79780000036",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("aeadd9e0-58b6-4029-bcc2-b60f7837d498"),
                            BirthDate = new DateTime(1996, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9037),
                            CreatedAt = new DateTime(2025, 5, 23, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest37@example.com",
                            FullName = "Гость Херсонеса 37",
                            PasswordHash = "hash123",
                            Phone = "+79780000037",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("8b76ac5f-49b2-4306-a903-54650e8e7e00"),
                            BirthDate = new DateTime(2007, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9039),
                            CreatedAt = new DateTime(2025, 5, 24, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest38@example.com",
                            FullName = "Гость Херсонеса 38",
                            PasswordHash = "hash123",
                            Phone = "+79780000038",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("ed64b557-ebd8-4c7b-9d21-db37ccba4fde"),
                            BirthDate = new DateTime(1992, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9041),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest39@example.com",
                            FullName = "Гость Херсонеса 39",
                            PasswordHash = "hash123",
                            Phone = "+79780000039",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6e85bee8-18d5-43b6-a9d1-b202ed37bbfb"),
                            BirthDate = new DateTime(2005, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9043),
                            CreatedAt = new DateTime(2025, 5, 26, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest40@example.com",
                            FullName = "Гость Херсонеса 40",
                            PasswordHash = "hash123",
                            Phone = "+79780000040",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("1ade44ce-3879-4c2e-951b-ce2ae9e30057"),
                            BirthDate = new DateTime(1981, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9045),
                            CreatedAt = new DateTime(2025, 5, 27, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest41@example.com",
                            FullName = "Гость Херсонеса 41",
                            PasswordHash = "hash123",
                            Phone = "+79780000041",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("74c9dfee-9f0c-4b86-ade5-f8ec4f17c61d"),
                            BirthDate = new DateTime(1998, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9049),
                            CreatedAt = new DateTime(2025, 5, 28, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest42@example.com",
                            FullName = "Гость Херсонеса 42",
                            PasswordHash = "hash123",
                            Phone = "+79780000042",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("eaeaab44-64c3-4b00-9b95-46883a4730c1"),
                            BirthDate = new DateTime(1993, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9051),
                            CreatedAt = new DateTime(2025, 5, 29, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest43@example.com",
                            FullName = "Гость Херсонеса 43",
                            PasswordHash = "hash123",
                            Phone = "+79780000043",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("a3c19eb8-c2e6-496d-b120-2549c873f82d"),
                            BirthDate = new DateTime(1996, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9053),
                            CreatedAt = new DateTime(2025, 5, 30, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest44@example.com",
                            FullName = "Гость Херсонеса 44",
                            PasswordHash = "hash123",
                            Phone = "+79780000044",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("a9c7ebc0-70c9-4c6c-a9a2-7e668b202fd2"),
                            BirthDate = new DateTime(1986, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9055),
                            CreatedAt = new DateTime(2025, 5, 31, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest45@example.com",
                            FullName = "Гость Херсонеса 45",
                            PasswordHash = "hash123",
                            Phone = "+79780000045",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("724f17bc-46b3-46e0-b101-4fe73c5733ef"),
                            BirthDate = new DateTime(2001, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9057),
                            CreatedAt = new DateTime(2025, 6, 1, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest46@example.com",
                            FullName = "Гость Херсонеса 46",
                            PasswordHash = "hash123",
                            Phone = "+79780000046",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("b7afd8cb-e654-4280-be88-d89685e63406"),
                            BirthDate = new DateTime(2005, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9059),
                            CreatedAt = new DateTime(2025, 6, 2, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest47@example.com",
                            FullName = "Гость Херсонеса 47",
                            PasswordHash = "hash123",
                            Phone = "+79780000047",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("648dbfb3-7071-450b-bc5a-da0804c52148"),
                            BirthDate = new DateTime(1972, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9061),
                            CreatedAt = new DateTime(2025, 6, 3, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest48@example.com",
                            FullName = "Гость Херсонеса 48",
                            PasswordHash = "hash123",
                            Phone = "+79780000048",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("219080a1-b736-4544-8c78-df9b79479f61"),
                            BirthDate = new DateTime(1996, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9063),
                            CreatedAt = new DateTime(2025, 6, 4, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest49@example.com",
                            FullName = "Гость Херсонеса 49",
                            PasswordHash = "hash123",
                            Phone = "+79780000049",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("eadbb3f5-fdb3-418d-aaa0-1f1044d16038"),
                            BirthDate = new DateTime(2007, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9067),
                            CreatedAt = new DateTime(2025, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "guest50@example.com",
                            FullName = "Гость Херсонеса 50",
                            PasswordHash = "hash123",
                            Phone = "+79780000050",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("3f7b9ee2-eed8-4060-9eff-9dc0a82c1d67"),
                            BirthDate = new DateTime(1984, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9074),
                            CreatedAt = new DateTime(2025, 4, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "admin1@example.com",
                            FullName = "Администратор 1",
                            PasswordHash = "hashadmin",
                            Phone = "+79990000001",
                            Role = "admin"
                        },
                        new
                        {
                            Id = new Guid("3522ea81-f4ed-496a-924d-d13d29782892"),
                            BirthDate = new DateTime(1986, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9112),
                            CreatedAt = new DateTime(2025, 4, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "admin2@example.com",
                            FullName = "Администратор 2",
                            PasswordHash = "hashadmin",
                            Phone = "+79990000002",
                            Role = "admin"
                        },
                        new
                        {
                            Id = new Guid("c1812067-47e6-4285-9b6b-73efeaa6fe95"),
                            BirthDate = new DateTime(1987, 6, 5, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(9115),
                            CreatedAt = new DateTime(2025, 4, 6, 8, 9, 20, 751, DateTimeKind.Utc).AddTicks(8729),
                            Email = "admin3@example.com",
                            FullName = "Администратор 3",
                            PasswordHash = "hashadmin",
                            Phone = "+79990000003",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.UserAttendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAttendees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bca2b3f-f49f-4795-87ab-516cac5ebe24"),
                            AttendeeId = new Guid("93596350-bc43-41c1-8a7c-5b88aff62a7d"),
                            UserId = new Guid("fcf945fc-330d-47e8-9063-53ad58a60f02")
                        },
                        new
                        {
                            Id = new Guid("d58b9872-3a8a-417e-9433-099901bcf18e"),
                            AttendeeId = new Guid("24b32027-3eeb-44b9-b08c-2f726484552c"),
                            UserId = new Guid("fcf945fc-330d-47e8-9063-53ad58a60f02")
                        },
                        new
                        {
                            Id = new Guid("5ee28615-4344-459e-8979-1464c2a4d750"),
                            AttendeeId = new Guid("bd201d85-0b77-4acf-bdaf-8999cd56f8e7"),
                            UserId = new Guid("2d708e3b-86c5-4250-9da0-6d1dad8a1fb1")
                        },
                        new
                        {
                            Id = new Guid("5bb88782-b041-4a42-8209-a82f565ebf5a"),
                            AttendeeId = new Guid("f6e87243-74ad-41b7-b08c-d6bc91859939"),
                            UserId = new Guid("2d708e3b-86c5-4250-9da0-6d1dad8a1fb1")
                        },
                        new
                        {
                            Id = new Guid("06449b48-633f-4423-a04e-240a6d82a9eb"),
                            AttendeeId = new Guid("5e4c88bd-5eca-4ed5-b864-9cd5d6d7e865"),
                            UserId = new Guid("fcf945fc-330d-47e8-9063-53ad58a60f02")
                        },
                        new
                        {
                            Id = new Guid("a9760bb0-ad60-4efd-a66a-5f22a576589a"),
                            AttendeeId = new Guid("5258364d-f5fe-44b4-9317-4934ed842577"),
                            UserId = new Guid("fcf945fc-330d-47e8-9063-53ad58a60f02")
                        },
                        new
                        {
                            Id = new Guid("c92871e8-1ab4-472d-a5c4-9b267cbf52b5"),
                            AttendeeId = new Guid("c2a9c6f6-2990-497f-9e90-2636b66e31f2"),
                            UserId = new Guid("967421c3-789f-494d-9e3d-054d2d82ff99")
                        },
                        new
                        {
                            Id = new Guid("9693468f-5f6b-4631-b332-63a2b424edc6"),
                            AttendeeId = new Guid("cb1af63e-4fd5-4d6b-8038-de20e24f33c1"),
                            UserId = new Guid("967421c3-789f-494d-9e3d-054d2d82ff99")
                        },
                        new
                        {
                            Id = new Guid("3fe40186-c65e-469f-965c-fdca78cd6c68"),
                            AttendeeId = new Guid("2cd8ae16-5402-48cb-bbfd-f1f3ffea766e"),
                            UserId = new Guid("ed64b557-ebd8-4c7b-9d21-db37ccba4fde")
                        },
                        new
                        {
                            Id = new Guid("73119720-980e-4639-856b-bd532936b18b"),
                            AttendeeId = new Guid("4da14c68-5f9a-4584-9ef4-415342065bda"),
                            UserId = new Guid("ed64b557-ebd8-4c7b-9d21-db37ccba4fde")
                        },
                        new
                        {
                            Id = new Guid("f8bb6796-aa78-4434-9688-b128aa08acb4"),
                            AttendeeId = new Guid("44a9bad0-0cdd-442c-a0aa-629d75659f50"),
                            UserId = new Guid("a3c19eb8-c2e6-496d-b120-2549c873f82d")
                        },
                        new
                        {
                            Id = new Guid("c4fa58c1-f760-4514-bcab-c3becacfce97"),
                            AttendeeId = new Guid("7519c93a-10f9-4a24-a811-2b57222f88a6"),
                            UserId = new Guid("a3c19eb8-c2e6-496d-b120-2549c873f82d")
                        },
                        new
                        {
                            Id = new Guid("3fb7f4b3-f352-46e9-8292-ee69a4d79d8d"),
                            AttendeeId = new Guid("897c170f-cb3a-4714-80ac-d557e8e24c8d"),
                            UserId = new Guid("07f86dd6-31c2-46a4-bdae-e63439b0fadb")
                        },
                        new
                        {
                            Id = new Guid("4105683c-afd3-4097-9042-513f24179fcb"),
                            AttendeeId = new Guid("76080d87-f976-40f1-8b10-a53630284249"),
                            UserId = new Guid("07f86dd6-31c2-46a4-bdae-e63439b0fadb")
                        },
                        new
                        {
                            Id = new Guid("21eef939-d1e7-4eb6-88cb-ac8a6b0cd360"),
                            AttendeeId = new Guid("423b042e-7c45-4b70-85b6-783c49f5247b"),
                            UserId = new Guid("ed64b557-ebd8-4c7b-9d21-db37ccba4fde")
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.UserEventCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReminderTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEventCalendars");
                });

            modelBuilder.Entity("Core.Model.Entities.Payment", b =>
                {
                    b.HasOne("Core.Model.Entities.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Core.Model.Entities.Ticket", b =>
                {
                    b.HasOne("Core.Model.Entities.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId");

                    b.HasOne("Core.Model.Entities.Event", "Event")
                        .WithMany("Tickets")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.Payment", "Payment")
                        .WithMany("Tickets")
                        .HasForeignKey("PaymentId");

                    b.HasOne("Core.Model.Entities.User", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UserId");

                    b.Navigation("Attendee");

                    b.Navigation("Event");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Core.Model.Entities.UserAttendee", b =>
                {
                    b.HasOne("Core.Model.Entities.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Model.Entities.UserEventCalendar", b =>
                {
                    b.HasOne("Core.Model.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.User", "User")
                        .WithMany("Calendars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Model.Entities.Event", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Core.Model.Entities.Payment", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Core.Model.Entities.User", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
