// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250528084712_MigrationhNahmen")]
    partial class MigrationhNahmen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Model.Entities.Attendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1c2dc96-2dfc-4d8e-848d-1cfe9d8c23ef"),
                            BirthDate = new DateTime(2005, 5, 29, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(427),
                            CreatedAt = new DateTime(2025, 5, 27, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(479),
                            DocumentNumber = "A000001",
                            DocumentType = "passport",
                            FullName = "Attendee 1"
                        },
                        new
                        {
                            Id = new Guid("7ee5f0c3-5a79-46c2-a8ae-7bc3eb8e3ca2"),
                            BirthDate = new DateTime(2005, 5, 30, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(487),
                            CreatedAt = new DateTime(2025, 5, 26, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(492),
                            DocumentNumber = "A000002",
                            DocumentType = "passport",
                            FullName = "Attendee 2"
                        },
                        new
                        {
                            Id = new Guid("229f1943-00fa-4601-a20d-101b4b40d58c"),
                            BirthDate = new DateTime(2005, 5, 31, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(495),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(497),
                            DocumentNumber = "A000003",
                            DocumentType = "passport",
                            FullName = "Attendee 3"
                        },
                        new
                        {
                            Id = new Guid("2fb9a86c-6358-4c23-b06d-c2ce89ee928b"),
                            BirthDate = new DateTime(2005, 6, 1, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(500),
                            CreatedAt = new DateTime(2025, 5, 24, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(503),
                            DocumentNumber = "A000004",
                            DocumentType = "passport",
                            FullName = "Attendee 4"
                        },
                        new
                        {
                            Id = new Guid("cf993887-29b7-4b7b-a8de-d8b93e197d36"),
                            BirthDate = new DateTime(2005, 6, 2, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(505),
                            CreatedAt = new DateTime(2025, 5, 23, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(507),
                            DocumentNumber = "A000005",
                            DocumentType = "passport",
                            FullName = "Attendee 5"
                        },
                        new
                        {
                            Id = new Guid("80f19c7d-971f-4a4f-abc3-1a7cf1b2f790"),
                            BirthDate = new DateTime(2005, 6, 3, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(511),
                            CreatedAt = new DateTime(2025, 5, 22, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(513),
                            DocumentNumber = "A000006",
                            DocumentType = "passport",
                            FullName = "Attendee 6"
                        },
                        new
                        {
                            Id = new Guid("7a2c488d-4ead-45cf-84fd-c96b11ae2205"),
                            BirthDate = new DateTime(2005, 6, 4, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(515),
                            CreatedAt = new DateTime(2025, 5, 21, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(518),
                            DocumentNumber = "A000007",
                            DocumentType = "passport",
                            FullName = "Attendee 7"
                        },
                        new
                        {
                            Id = new Guid("abd12495-137e-451b-925d-20de0169a0bf"),
                            BirthDate = new DateTime(2005, 6, 5, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(556),
                            CreatedAt = new DateTime(2025, 5, 20, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(559),
                            DocumentNumber = "A000008",
                            DocumentType = "passport",
                            FullName = "Attendee 8"
                        },
                        new
                        {
                            Id = new Guid("5dbbb7b4-cf4f-4fa5-b362-a2b56e27208f"),
                            BirthDate = new DateTime(2005, 6, 6, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(562),
                            CreatedAt = new DateTime(2025, 5, 19, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(564),
                            DocumentNumber = "A000009",
                            DocumentType = "passport",
                            FullName = "Attendee 9"
                        },
                        new
                        {
                            Id = new Guid("72b96175-96b3-4d79-b593-de70f031391e"),
                            BirthDate = new DateTime(2005, 6, 7, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(571),
                            CreatedAt = new DateTime(2025, 5, 18, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(576),
                            DocumentNumber = "A000010",
                            DocumentType = "passport",
                            FullName = "Attendee 10"
                        },
                        new
                        {
                            Id = new Guid("c5d61a6a-c9e3-406a-a03a-373872ccb7ea"),
                            BirthDate = new DateTime(2005, 6, 8, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(578),
                            CreatedAt = new DateTime(2025, 5, 17, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(581),
                            DocumentNumber = "A000011",
                            DocumentType = "passport",
                            FullName = "Attendee 11"
                        },
                        new
                        {
                            Id = new Guid("63a76871-8078-4fc3-bd51-ce88ed340464"),
                            BirthDate = new DateTime(2005, 6, 9, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(584),
                            CreatedAt = new DateTime(2025, 5, 16, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(586),
                            DocumentNumber = "A000012",
                            DocumentType = "passport",
                            FullName = "Attendee 12"
                        },
                        new
                        {
                            Id = new Guid("cf28a36d-a24b-4f0e-b92a-668336a0d7bc"),
                            BirthDate = new DateTime(2005, 6, 10, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(589),
                            CreatedAt = new DateTime(2025, 5, 15, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(591),
                            DocumentNumber = "A000013",
                            DocumentType = "passport",
                            FullName = "Attendee 13"
                        },
                        new
                        {
                            Id = new Guid("b75a17c9-46e5-4420-8f51-736afeec81b0"),
                            BirthDate = new DateTime(2005, 6, 11, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(593),
                            CreatedAt = new DateTime(2025, 5, 14, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(596),
                            DocumentNumber = "A000014",
                            DocumentType = "passport",
                            FullName = "Attendee 14"
                        },
                        new
                        {
                            Id = new Guid("28d55ef2-bb8f-4f5d-98af-48168d172f34"),
                            BirthDate = new DateTime(2005, 6, 12, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(598),
                            CreatedAt = new DateTime(2025, 5, 13, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(600),
                            DocumentNumber = "A000015",
                            DocumentType = "passport",
                            FullName = "Attendee 15"
                        },
                        new
                        {
                            Id = new Guid("2d5024f7-49e8-44d6-8e94-83c4abca3262"),
                            BirthDate = new DateTime(2005, 6, 13, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(602),
                            CreatedAt = new DateTime(2025, 5, 12, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(605),
                            DocumentNumber = "A000016",
                            DocumentType = "passport",
                            FullName = "Attendee 16"
                        },
                        new
                        {
                            Id = new Guid("4b89a33f-5042-416b-aad8-6af16561c76a"),
                            BirthDate = new DateTime(2005, 6, 14, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(607),
                            CreatedAt = new DateTime(2025, 5, 11, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(610),
                            DocumentNumber = "A000017",
                            DocumentType = "passport",
                            FullName = "Attendee 17"
                        },
                        new
                        {
                            Id = new Guid("f1e62a28-0cf7-4607-9a08-a6d9174696ae"),
                            BirthDate = new DateTime(2005, 6, 15, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(615),
                            CreatedAt = new DateTime(2025, 5, 10, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(618),
                            DocumentNumber = "A000018",
                            DocumentType = "passport",
                            FullName = "Attendee 18"
                        },
                        new
                        {
                            Id = new Guid("7785df99-026c-4a15-8582-2975ee36ffe2"),
                            BirthDate = new DateTime(2005, 6, 16, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(620),
                            CreatedAt = new DateTime(2025, 5, 9, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(623),
                            DocumentNumber = "A000019",
                            DocumentType = "passport",
                            FullName = "Attendee 19"
                        },
                        new
                        {
                            Id = new Guid("65c65d45-dc2b-4822-b9fe-76124bc8d140"),
                            BirthDate = new DateTime(2005, 6, 17, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(625),
                            CreatedAt = new DateTime(2025, 5, 8, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(628),
                            DocumentNumber = "A000020",
                            DocumentType = "passport",
                            FullName = "Attendee 20"
                        },
                        new
                        {
                            Id = new Guid("11884b48-662c-4fb2-97b0-c485104baa59"),
                            BirthDate = new DateTime(2005, 6, 18, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(630),
                            CreatedAt = new DateTime(2025, 5, 7, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(632),
                            DocumentNumber = "A000021",
                            DocumentType = "passport",
                            FullName = "Attendee 21"
                        },
                        new
                        {
                            Id = new Guid("0587e2af-c192-4735-866a-364521be9013"),
                            BirthDate = new DateTime(2005, 6, 19, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(634),
                            CreatedAt = new DateTime(2025, 5, 6, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(637),
                            DocumentNumber = "A000022",
                            DocumentType = "passport",
                            FullName = "Attendee 22"
                        },
                        new
                        {
                            Id = new Guid("d1e9dc3f-0484-42f5-8cfe-1efd3391d0c7"),
                            BirthDate = new DateTime(2005, 6, 20, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(639),
                            CreatedAt = new DateTime(2025, 5, 5, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(641),
                            DocumentNumber = "A000023",
                            DocumentType = "passport",
                            FullName = "Attendee 23"
                        },
                        new
                        {
                            Id = new Guid("5c9b6739-c80a-439f-ad3f-38752bfc0d49"),
                            BirthDate = new DateTime(2005, 6, 21, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(643),
                            CreatedAt = new DateTime(2025, 5, 4, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(646),
                            DocumentNumber = "A000024",
                            DocumentType = "passport",
                            FullName = "Attendee 24"
                        },
                        new
                        {
                            Id = new Guid("15f4fee1-5ac6-4d2c-b084-b2ee20c95e22"),
                            BirthDate = new DateTime(2005, 6, 22, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(648),
                            CreatedAt = new DateTime(2025, 5, 3, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(651),
                            DocumentNumber = "A000025",
                            DocumentType = "passport",
                            FullName = "Attendee 25"
                        },
                        new
                        {
                            Id = new Guid("1914aa47-eda0-400d-8258-f06e4117673e"),
                            BirthDate = new DateTime(2005, 6, 23, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(655),
                            CreatedAt = new DateTime(2025, 5, 2, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(657),
                            DocumentNumber = "A000026",
                            DocumentType = "passport",
                            FullName = "Attendee 26"
                        },
                        new
                        {
                            Id = new Guid("7fb4843a-7f10-4bd5-97c9-f12ca3db7bd5"),
                            BirthDate = new DateTime(2005, 6, 24, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(660),
                            CreatedAt = new DateTime(2025, 5, 1, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(662),
                            DocumentNumber = "A000027",
                            DocumentType = "passport",
                            FullName = "Attendee 27"
                        },
                        new
                        {
                            Id = new Guid("68dbfb88-402b-49c8-8f77-718c46721d4a"),
                            BirthDate = new DateTime(2005, 6, 25, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(664),
                            CreatedAt = new DateTime(2025, 4, 30, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(666),
                            DocumentNumber = "A000028",
                            DocumentType = "passport",
                            FullName = "Attendee 28"
                        },
                        new
                        {
                            Id = new Guid("874b286c-1dc9-4c43-9098-554815e724e0"),
                            BirthDate = new DateTime(2005, 6, 26, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(668),
                            CreatedAt = new DateTime(2025, 4, 29, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(671),
                            DocumentNumber = "A000029",
                            DocumentType = "passport",
                            FullName = "Attendee 29"
                        },
                        new
                        {
                            Id = new Guid("4458fcf2-5cac-44b0-a80b-4f7b404585c0"),
                            BirthDate = new DateTime(2005, 6, 27, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(673),
                            CreatedAt = new DateTime(2025, 4, 28, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(676),
                            DocumentNumber = "A000030",
                            DocumentType = "passport",
                            FullName = "Attendee 30"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TicketsCount")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            CreatedAt = new DateTime(2025, 5, 27, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(226),
                            Description = "Description 1",
                            EndTime = new DateTime(2025, 5, 29, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(220),
                            IsActive = true,
                            Location = "Location 1",
                            Price = 110m,
                            StartTime = new DateTime(2025, 5, 29, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(212),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 1"
                        },
                        new
                        {
                            Id = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            CreatedAt = new DateTime(2025, 5, 26, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(235),
                            Description = "Description 2",
                            EndTime = new DateTime(2025, 5, 30, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(235),
                            IsActive = true,
                            Location = "Location 2",
                            Price = 120m,
                            StartTime = new DateTime(2025, 5, 30, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(234),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 2"
                        },
                        new
                        {
                            Id = new Guid("a99d1b22-45e1-4855-9c4a-6c30c1c4590a"),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(252),
                            Description = "Description 3",
                            EndTime = new DateTime(2025, 5, 31, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(251),
                            IsActive = true,
                            Location = "Location 3",
                            Price = 130m,
                            StartTime = new DateTime(2025, 5, 31, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(251),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 3"
                        },
                        new
                        {
                            Id = new Guid("ac7c5ab4-9a29-4ff3-b40d-650c5662f366"),
                            CreatedAt = new DateTime(2025, 5, 24, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(257),
                            Description = "Description 4",
                            EndTime = new DateTime(2025, 6, 1, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(257),
                            IsActive = true,
                            Location = "Location 4",
                            Price = 140m,
                            StartTime = new DateTime(2025, 6, 1, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(256),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 4"
                        },
                        new
                        {
                            Id = new Guid("fa8cd1b9-1e15-484d-a584-269075566d3c"),
                            CreatedAt = new DateTime(2025, 5, 23, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(301),
                            Description = "Description 5",
                            EndTime = new DateTime(2025, 6, 2, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(300),
                            IsActive = true,
                            Location = "Location 5",
                            Price = 150m,
                            StartTime = new DateTime(2025, 6, 2, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(300),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 5"
                        },
                        new
                        {
                            Id = new Guid("ee0e58f7-e06a-4d16-bd99-c792362b12bb"),
                            CreatedAt = new DateTime(2025, 5, 22, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(308),
                            Description = "Description 6",
                            EndTime = new DateTime(2025, 6, 3, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(307),
                            IsActive = true,
                            Location = "Location 6",
                            Price = 160m,
                            StartTime = new DateTime(2025, 6, 3, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(307),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 6"
                        },
                        new
                        {
                            Id = new Guid("f24c8d5e-f6ae-4f3b-adfe-e58942f8d562"),
                            CreatedAt = new DateTime(2025, 5, 21, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(313),
                            Description = "Description 7",
                            EndTime = new DateTime(2025, 6, 4, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(313),
                            IsActive = true,
                            Location = "Location 7",
                            Price = 170m,
                            StartTime = new DateTime(2025, 6, 4, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(312),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 7"
                        },
                        new
                        {
                            Id = new Guid("e989e3c6-cdfb-43af-842b-1e730d22b9e9"),
                            CreatedAt = new DateTime(2025, 5, 20, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(318),
                            Description = "Description 8",
                            EndTime = new DateTime(2025, 6, 5, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(317),
                            IsActive = true,
                            Location = "Location 8",
                            Price = 180m,
                            StartTime = new DateTime(2025, 6, 5, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(317),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 8"
                        },
                        new
                        {
                            Id = new Guid("57f7dfce-716f-4742-afad-4e6e701ab0ea"),
                            CreatedAt = new DateTime(2025, 5, 19, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(322),
                            Description = "Description 9",
                            EndTime = new DateTime(2025, 6, 6, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(322),
                            IsActive = true,
                            Location = "Location 9",
                            Price = 190m,
                            StartTime = new DateTime(2025, 6, 6, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(321),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 9"
                        },
                        new
                        {
                            Id = new Guid("39186acd-cd56-4cc4-820f-0c47a5026a53"),
                            CreatedAt = new DateTime(2025, 5, 18, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(330),
                            Description = "Description 10",
                            EndTime = new DateTime(2025, 6, 7, 10, 47, 12, 384, DateTimeKind.Utc).AddTicks(329),
                            IsActive = true,
                            Location = "Location 10",
                            Price = 200m,
                            StartTime = new DateTime(2025, 6, 7, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(329),
                            Tag = "event",
                            TicketsCount = 5,
                            Title = "Event 10"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("EntityTarget")
                        .HasColumnType("text");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocalOrderRank")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Core.Model.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("QrUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7057c1e-7c8a-4f1c-bf69-fbd374df38ab"),
                            Amount = 300m,
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            CreatedAt = new DateTime(2025, 5, 27, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1053),
                            PaidAt = new DateTime(2025, 5, 28, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1055),
                            QrUrl = "https://pay/d7057c1e-7c8a-4f1c-bf69-fbd374df38ab",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("1cced4d1-115d-4ae5-96b1-f0ee635ba8ca"),
                            Amount = 300m,
                            BuyerId = new Guid("943a39fe-6749-4463-aad7-7f50ada7826b"),
                            CreatedAt = new DateTime(2025, 5, 26, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1083),
                            PaidAt = new DateTime(2025, 5, 27, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1085),
                            QrUrl = "https://pay/1cced4d1-115d-4ae5-96b1-f0ee635ba8ca",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("08560384-6437-4c3b-9509-802688194f77"),
                            Amount = 300m,
                            BuyerId = new Guid("a49a21ae-dfd4-42e7-8560-ed013222d778"),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1136),
                            PaidAt = new DateTime(2025, 5, 26, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1139),
                            QrUrl = "https://pay/08560384-6437-4c3b-9509-802688194f77",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("82479d15-15a6-4902-af74-d80e708460bb"),
                            Amount = 300m,
                            BuyerId = new Guid("6dfef277-7efd-455a-b3ca-b2da7b87f9e1"),
                            CreatedAt = new DateTime(2025, 5, 24, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1156),
                            PaidAt = new DateTime(2025, 5, 25, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1158),
                            QrUrl = "https://pay/82479d15-15a6-4902-af74-d80e708460bb",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("088d1ee5-5eac-4d89-9520-9594ac7d479e"),
                            Amount = 300m,
                            BuyerId = new Guid("c58b7e14-db7a-4df3-a744-d69f736794f8"),
                            CreatedAt = new DateTime(2025, 5, 23, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1176),
                            PaidAt = new DateTime(2025, 5, 24, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1179),
                            QrUrl = "https://pay/088d1ee5-5eac-4d89-9520-9594ac7d479e",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("f2c520af-d5c8-4909-a097-7f736f253a20"),
                            Amount = 0m,
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            CreatedAt = new DateTime(2025, 5, 22, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1204),
                            PaidAt = new DateTime(2025, 5, 23, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1207),
                            QrUrl = "https://pay/f2c520af-d5c8-4909-a097-7f736f253a20",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("4eb622a6-03e0-48e3-b9ca-c456bac67fee"),
                            Amount = 0m,
                            BuyerId = new Guid("9154dd80-942d-404f-a638-e234c7a4410b"),
                            CreatedAt = new DateTime(2025, 5, 21, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1231),
                            PaidAt = new DateTime(2025, 5, 22, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1234),
                            QrUrl = "https://pay/4eb622a6-03e0-48e3-b9ca-c456bac67fee",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("67f818b2-18f1-4c46-b15b-7ec77bac81a7"),
                            Amount = 0m,
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            CreatedAt = new DateTime(2025, 5, 20, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1261),
                            PaidAt = new DateTime(2025, 5, 21, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1263),
                            QrUrl = "https://pay/67f818b2-18f1-4c46-b15b-7ec77bac81a7",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("502c0555-0e02-40fc-a14a-9e67f6920f98"),
                            Amount = 0m,
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            CreatedAt = new DateTime(2025, 5, 19, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1287),
                            PaidAt = new DateTime(2025, 5, 20, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1289),
                            QrUrl = "https://pay/502c0555-0e02-40fc-a14a-9e67f6920f98",
                            Status = "paid"
                        },
                        new
                        {
                            Id = new Guid("5c89dd73-ec14-4a33-8a61-12e710de23ce"),
                            Amount = 0m,
                            BuyerId = new Guid("4265f660-da4a-429b-9490-615354aeeca3"),
                            CreatedAt = new DateTime(2025, 5, 18, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1315),
                            PaidAt = new DateTime(2025, 5, 19, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(1318),
                            QrUrl = "https://pay/5c89dd73-ec14-4a33-8a61-12e710de23ce",
                            Status = "paid"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AttendeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BuyerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uuid");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("EventId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e54b079-1a69-4553-8f0e-ecf179f24941"),
                            AttendeeId = new Guid("a1c2dc96-2dfc-4d8e-848d-1cfe9d8c23ef"),
                            BuyerId = new Guid("b90793b8-9486-4d57-863b-aa29ea7a15c3"),
                            EventId = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            QRCode = "QR0001",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("ab05144d-de7d-481b-b122-de211c3d0ada"),
                            AttendeeId = new Guid("65c65d45-dc2b-4822-b9fe-76124bc8d140"),
                            BuyerId = new Guid("9154dd80-942d-404f-a638-e234c7a4410b"),
                            EventId = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            QRCode = "QR0002",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("adf56fa4-791b-482e-890a-8c3585a39f12"),
                            AttendeeId = new Guid("cf993887-29b7-4b7b-a8de-d8b93e197d36"),
                            BuyerId = new Guid("6f8f1956-7f7e-47f4-8308-57e913730f9c"),
                            EventId = new Guid("39186acd-cd56-4cc4-820f-0c47a5026a53"),
                            QRCode = "QR0003",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("8e5e6bf9-f57b-4687-aded-c0b8d86c0934"),
                            AttendeeId = new Guid("7fb4843a-7f10-4bd5-97c9-f12ca3db7bd5"),
                            BuyerId = new Guid("401c5178-21ed-4134-b9fe-47d514783814"),
                            EventId = new Guid("ac7c5ab4-9a29-4ff3-b40d-650c5662f366"),
                            QRCode = "QR0004",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("1bf4627b-4ee7-498a-9236-af9bae9b9b40"),
                            AttendeeId = new Guid("874b286c-1dc9-4c43-9098-554815e724e0"),
                            BuyerId = new Guid("6dfef277-7efd-455a-b3ca-b2da7b87f9e1"),
                            EventId = new Guid("57f7dfce-716f-4742-afad-4e6e701ab0ea"),
                            QRCode = "QR0005",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("b4ea1939-7609-4f57-aa25-fc6418141654"),
                            AttendeeId = new Guid("4b89a33f-5042-416b-aad8-6af16561c76a"),
                            BuyerId = new Guid("818eda47-8d9f-4abf-a820-ac1a6dead02d"),
                            EventId = new Guid("f24c8d5e-f6ae-4f3b-adfe-e58942f8d562"),
                            QRCode = "QR0006",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("14fb8bee-5bf7-4a92-8d8e-406cc45629a8"),
                            AttendeeId = new Guid("cf28a36d-a24b-4f0e-b92a-668336a0d7bc"),
                            BuyerId = new Guid("3b75043d-7a71-48d5-a0c8-57cd8b9e90ef"),
                            EventId = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            QRCode = "QR0007",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("3393149b-7fa1-41c4-8a20-9f740b5871d6"),
                            AttendeeId = new Guid("28d55ef2-bb8f-4f5d-98af-48168d172f34"),
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            EventId = new Guid("fa8cd1b9-1e15-484d-a584-269075566d3c"),
                            QRCode = "QR0008",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("eca3dbf7-a948-491d-80bb-2ab90bcdc479"),
                            AttendeeId = new Guid("72b96175-96b3-4d79-b593-de70f031391e"),
                            BuyerId = new Guid("a49a21ae-dfd4-42e7-8560-ed013222d778"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0009",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("0bebe831-7819-4262-81e3-c78b6b6d032f"),
                            AttendeeId = new Guid("80f19c7d-971f-4a4f-abc3-1a7cf1b2f790"),
                            BuyerId = new Guid("3b75043d-7a71-48d5-a0c8-57cd8b9e90ef"),
                            EventId = new Guid("39186acd-cd56-4cc4-820f-0c47a5026a53"),
                            QRCode = "QR0010",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("ced11ca3-1aa4-43c9-84fe-25fdb7347600"),
                            AttendeeId = new Guid("cf993887-29b7-4b7b-a8de-d8b93e197d36"),
                            BuyerId = new Guid("a49a21ae-dfd4-42e7-8560-ed013222d778"),
                            EventId = new Guid("39186acd-cd56-4cc4-820f-0c47a5026a53"),
                            QRCode = "QR0011",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("102ee03a-d60a-4295-a1ed-92df48bc96df"),
                            AttendeeId = new Guid("1914aa47-eda0-400d-8258-f06e4117673e"),
                            BuyerId = new Guid("a49a21ae-dfd4-42e7-8560-ed013222d778"),
                            EventId = new Guid("ee0e58f7-e06a-4d16-bd99-c792362b12bb"),
                            QRCode = "QR0012",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("5b9a4b10-ce22-4079-b38d-801ffd4ca582"),
                            AttendeeId = new Guid("5c9b6739-c80a-439f-ad3f-38752bfc0d49"),
                            BuyerId = new Guid("6c69b26a-a027-4a9c-9f94-f4cf528f3de3"),
                            EventId = new Guid("f24c8d5e-f6ae-4f3b-adfe-e58942f8d562"),
                            QRCode = "QR0013",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("8d9a3500-5358-418b-bc94-cad01bc58227"),
                            AttendeeId = new Guid("5c9b6739-c80a-439f-ad3f-38752bfc0d49"),
                            BuyerId = new Guid("4265f660-da4a-429b-9490-615354aeeca3"),
                            EventId = new Guid("57f7dfce-716f-4742-afad-4e6e701ab0ea"),
                            QRCode = "QR0014",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("abaf3946-4148-4ed3-a4a8-c29c2ebbe72e"),
                            AttendeeId = new Guid("c5d61a6a-c9e3-406a-a03a-373872ccb7ea"),
                            BuyerId = new Guid("6f8f1956-7f7e-47f4-8308-57e913730f9c"),
                            EventId = new Guid("fa8cd1b9-1e15-484d-a584-269075566d3c"),
                            QRCode = "QR0015",
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("4c910bb3-5aa7-43c4-b9c9-22fbb18c44ad"),
                            AttendeeId = new Guid("7a2c488d-4ead-45cf-84fd-c96b11ae2205"),
                            BuyerId = new Guid("401c5178-21ed-4134-b9fe-47d514783814"),
                            EventId = new Guid("f24c8d5e-f6ae-4f3b-adfe-e58942f8d562"),
                            QRCode = "QR0016",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("fba4d511-87d6-4153-b2c6-95835f0a7038"),
                            AttendeeId = new Guid("cf993887-29b7-4b7b-a8de-d8b93e197d36"),
                            BuyerId = new Guid("643758bc-271d-4a17-91d7-a3a475759b06"),
                            EventId = new Guid("ee0e58f7-e06a-4d16-bd99-c792362b12bb"),
                            QRCode = "QR0017",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("133ea614-757c-43f9-87cd-90d55b18a666"),
                            AttendeeId = new Guid("1914aa47-eda0-400d-8258-f06e4117673e"),
                            BuyerId = new Guid("038020d8-12e9-402b-b8c0-92d29821f0b4"),
                            EventId = new Guid("ee0e58f7-e06a-4d16-bd99-c792362b12bb"),
                            QRCode = "QR0018",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("23b9f281-b8b5-4c02-9be8-9003e39b388a"),
                            AttendeeId = new Guid("cf993887-29b7-4b7b-a8de-d8b93e197d36"),
                            BuyerId = new Guid("9154dd80-942d-404f-a638-e234c7a4410b"),
                            EventId = new Guid("e989e3c6-cdfb-43af-842b-1e730d22b9e9"),
                            QRCode = "QR0019",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("6e450326-e3b1-4fca-a645-95bfd8ae6c0c"),
                            AttendeeId = new Guid("65c65d45-dc2b-4822-b9fe-76124bc8d140"),
                            BuyerId = new Guid("943a39fe-6749-4463-aad7-7f50ada7826b"),
                            EventId = new Guid("f24c8d5e-f6ae-4f3b-adfe-e58942f8d562"),
                            QRCode = "QR0020",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("5401fefc-17de-4bca-b080-5499042986e0"),
                            AttendeeId = new Guid("15f4fee1-5ac6-4d2c-b084-b2ee20c95e22"),
                            BuyerId = new Guid("038020d8-12e9-402b-b8c0-92d29821f0b4"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0021",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("e84301a6-6e4b-4b17-9e8b-aee50f2e57d9"),
                            AttendeeId = new Guid("874b286c-1dc9-4c43-9098-554815e724e0"),
                            BuyerId = new Guid("a49a21ae-dfd4-42e7-8560-ed013222d778"),
                            EventId = new Guid("e989e3c6-cdfb-43af-842b-1e730d22b9e9"),
                            QRCode = "QR0022",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("17d5bffb-95db-4352-91fb-b67131bfc98f"),
                            AttendeeId = new Guid("229f1943-00fa-4601-a20d-101b4b40d58c"),
                            BuyerId = new Guid("662ab944-ef90-434b-8902-6e79f4f0b069"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0023",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("986037d4-ca3b-4323-b5e5-5a48a62a0bc4"),
                            AttendeeId = new Guid("5c9b6739-c80a-439f-ad3f-38752bfc0d49"),
                            BuyerId = new Guid("6f8f1956-7f7e-47f4-8308-57e913730f9c"),
                            EventId = new Guid("ac7c5ab4-9a29-4ff3-b40d-650c5662f366"),
                            QRCode = "QR0024",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("ffc38c7b-5efc-444e-acd5-4d652a76073d"),
                            AttendeeId = new Guid("15f4fee1-5ac6-4d2c-b084-b2ee20c95e22"),
                            BuyerId = new Guid("643758bc-271d-4a17-91d7-a3a475759b06"),
                            EventId = new Guid("ac7c5ab4-9a29-4ff3-b40d-650c5662f366"),
                            QRCode = "QR0025",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("932b64bc-80d5-4b3e-a668-670c52cae332"),
                            AttendeeId = new Guid("874b286c-1dc9-4c43-9098-554815e724e0"),
                            BuyerId = new Guid("04cd91cd-df56-49b3-b170-6335847eaf88"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0026",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("177d978d-2f8f-4b83-894c-75c446a51677"),
                            AttendeeId = new Guid("68dbfb88-402b-49c8-8f77-718c46721d4a"),
                            BuyerId = new Guid("943a39fe-6749-4463-aad7-7f50ada7826b"),
                            EventId = new Guid("39186acd-cd56-4cc4-820f-0c47a5026a53"),
                            QRCode = "QR0027",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("2e32a199-6ac9-4150-b7a1-642c1def0f5e"),
                            AttendeeId = new Guid("11884b48-662c-4fb2-97b0-c485104baa59"),
                            BuyerId = new Guid("9154dd80-942d-404f-a638-e234c7a4410b"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0028",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("182e7a29-c1b9-460d-b881-7c550446de1e"),
                            AttendeeId = new Guid("5dbbb7b4-cf4f-4fa5-b362-a2b56e27208f"),
                            BuyerId = new Guid("9154dd80-942d-404f-a638-e234c7a4410b"),
                            EventId = new Guid("39186acd-cd56-4cc4-820f-0c47a5026a53"),
                            QRCode = "QR0029",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("4975bce1-a930-4757-b65d-d03d7a623819"),
                            AttendeeId = new Guid("63a76871-8078-4fc3-bd51-ce88ed340464"),
                            BuyerId = new Guid("6f8f1956-7f7e-47f4-8308-57e913730f9c"),
                            EventId = new Guid("f24c8d5e-f6ae-4f3b-adfe-e58942f8d562"),
                            QRCode = "QR0030",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("053252c7-5581-4ef7-a369-e84f41baee53"),
                            AttendeeId = new Guid("d1e9dc3f-0484-42f5-8cfe-1efd3391d0c7"),
                            BuyerId = new Guid("662ab944-ef90-434b-8902-6e79f4f0b069"),
                            EventId = new Guid("57f7dfce-716f-4742-afad-4e6e701ab0ea"),
                            QRCode = "QR0031",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("8949b9a7-53b0-4100-9258-b9bf2801ebd4"),
                            AttendeeId = new Guid("11884b48-662c-4fb2-97b0-c485104baa59"),
                            BuyerId = new Guid("943a39fe-6749-4463-aad7-7f50ada7826b"),
                            EventId = new Guid("ee0e58f7-e06a-4d16-bd99-c792362b12bb"),
                            QRCode = "QR0032",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("476caf66-e6ad-4903-8c5c-dc9d15c7f271"),
                            AttendeeId = new Guid("65c65d45-dc2b-4822-b9fe-76124bc8d140"),
                            BuyerId = new Guid("643758bc-271d-4a17-91d7-a3a475759b06"),
                            EventId = new Guid("f24c8d5e-f6ae-4f3b-adfe-e58942f8d562"),
                            QRCode = "QR0033",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("bd7b7967-5453-42f2-a913-16f89df83334"),
                            AttendeeId = new Guid("11884b48-662c-4fb2-97b0-c485104baa59"),
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            EventId = new Guid("e989e3c6-cdfb-43af-842b-1e730d22b9e9"),
                            QRCode = "QR0034",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("6f2df506-2008-4d9c-b6d2-354421324327"),
                            AttendeeId = new Guid("4b89a33f-5042-416b-aad8-6af16561c76a"),
                            BuyerId = new Guid("ab7728f8-a2d0-45d0-b22c-cd6af53a6483"),
                            EventId = new Guid("fa8cd1b9-1e15-484d-a584-269075566d3c"),
                            QRCode = "QR0035",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("d3bc5708-6a86-45ba-8e3b-764b43ef467f"),
                            AttendeeId = new Guid("874b286c-1dc9-4c43-9098-554815e724e0"),
                            BuyerId = new Guid("818eda47-8d9f-4abf-a820-ac1a6dead02d"),
                            EventId = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            QRCode = "QR0036",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("6be8c429-8c28-440e-a847-fee4f7e315c6"),
                            AttendeeId = new Guid("cf28a36d-a24b-4f0e-b92a-668336a0d7bc"),
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            EventId = new Guid("ee0e58f7-e06a-4d16-bd99-c792362b12bb"),
                            QRCode = "QR0037",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("d82d712b-59f0-4776-b034-09312f844195"),
                            AttendeeId = new Guid("4b89a33f-5042-416b-aad8-6af16561c76a"),
                            BuyerId = new Guid("ba00b21a-f08d-4f73-8ba0-82504ebb0bbc"),
                            EventId = new Guid("fa8cd1b9-1e15-484d-a584-269075566d3c"),
                            QRCode = "QR0038",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("bc907754-0484-4964-819c-36edea1fa75b"),
                            AttendeeId = new Guid("11884b48-662c-4fb2-97b0-c485104baa59"),
                            BuyerId = new Guid("ba00b21a-f08d-4f73-8ba0-82504ebb0bbc"),
                            EventId = new Guid("ac7c5ab4-9a29-4ff3-b40d-650c5662f366"),
                            QRCode = "QR0039",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("f8c6d82c-f2e4-4f3c-9274-8bc9f3fe2782"),
                            AttendeeId = new Guid("abd12495-137e-451b-925d-20de0169a0bf"),
                            BuyerId = new Guid("643758bc-271d-4a17-91d7-a3a475759b06"),
                            EventId = new Guid("ee0e58f7-e06a-4d16-bd99-c792362b12bb"),
                            QRCode = "QR0040",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("64a242d1-08d9-42ab-b934-66f51b22d356"),
                            AttendeeId = new Guid("7ee5f0c3-5a79-46c2-a8ae-7bc3eb8e3ca2"),
                            BuyerId = new Guid("ba00b21a-f08d-4f73-8ba0-82504ebb0bbc"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0041",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("b37240ea-105f-4dfa-b522-9c1bae1a935a"),
                            AttendeeId = new Guid("5c9b6739-c80a-439f-ad3f-38752bfc0d49"),
                            BuyerId = new Guid("943a39fe-6749-4463-aad7-7f50ada7826b"),
                            EventId = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            QRCode = "QR0042",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("23a961cc-d027-4aa6-9c5f-02f84e8f0736"),
                            AttendeeId = new Guid("cf28a36d-a24b-4f0e-b92a-668336a0d7bc"),
                            BuyerId = new Guid("643758bc-271d-4a17-91d7-a3a475759b06"),
                            EventId = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            QRCode = "QR0043",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("0d9b6ed3-bbf7-48c4-839f-637c90814dae"),
                            AttendeeId = new Guid("7785df99-026c-4a15-8582-2975ee36ffe2"),
                            BuyerId = new Guid("943a39fe-6749-4463-aad7-7f50ada7826b"),
                            EventId = new Guid("fa8cd1b9-1e15-484d-a584-269075566d3c"),
                            QRCode = "QR0044",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("b887747b-7b8e-4358-8036-947751d7ff66"),
                            AttendeeId = new Guid("cf28a36d-a24b-4f0e-b92a-668336a0d7bc"),
                            BuyerId = new Guid("643758bc-271d-4a17-91d7-a3a475759b06"),
                            EventId = new Guid("a99d1b22-45e1-4855-9c4a-6c30c1c4590a"),
                            QRCode = "QR0045",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("dce17bf3-6c13-48c4-8c0e-1f20a8a06405"),
                            AttendeeId = new Guid("c5d61a6a-c9e3-406a-a03a-373872ccb7ea"),
                            BuyerId = new Guid("1bea191f-4cbb-4300-bba6-cbb3646f8dd9"),
                            EventId = new Guid("39186acd-cd56-4cc4-820f-0c47a5026a53"),
                            QRCode = "QR0046",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("4f572001-b386-4bda-b893-3773c6d3109f"),
                            AttendeeId = new Guid("65c65d45-dc2b-4822-b9fe-76124bc8d140"),
                            BuyerId = new Guid("b90793b8-9486-4d57-863b-aa29ea7a15c3"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0047",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("4d43f178-6166-48bd-b412-6d11aad5f40a"),
                            AttendeeId = new Guid("229f1943-00fa-4601-a20d-101b4b40d58c"),
                            BuyerId = new Guid("ab7728f8-a2d0-45d0-b22c-cd6af53a6483"),
                            EventId = new Guid("df0f0436-d9f9-46c6-9ced-d2a310e28510"),
                            QRCode = "QR0048",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("209ec2e0-9e24-4107-8023-48faeb677b03"),
                            AttendeeId = new Guid("a1c2dc96-2dfc-4d8e-848d-1cfe9d8c23ef"),
                            BuyerId = new Guid("662ab944-ef90-434b-8902-6e79f4f0b069"),
                            EventId = new Guid("ac7c5ab4-9a29-4ff3-b40d-650c5662f366"),
                            QRCode = "QR0049",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("e812d412-aa2d-4958-840e-7beb0144f6b2"),
                            AttendeeId = new Guid("f1e62a28-0cf7-4607-9a08-a6d9174696ae"),
                            BuyerId = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            EventId = new Guid("04e3e24a-b4e1-4bbb-9e20-dfcd985b8dbb"),
                            QRCode = "QR0050",
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b90793b8-9486-4d57-863b-aa29ea7a15c3"),
                            CreatedAt = new DateTime(2025, 5, 27, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(343),
                            Email = "user1@mail.com",
                            FullName = "User 1",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("c58b7e14-db7a-4df3-a744-d69f736794f8"),
                            CreatedAt = new DateTime(2025, 5, 26, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(348),
                            Email = "user2@mail.com",
                            FullName = "User 2",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6c69b26a-a027-4a9c-9f94-f4cf528f3de3"),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(351),
                            Email = "user3@mail.com",
                            FullName = "User 3",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("04cd91cd-df56-49b3-b170-6335847eaf88"),
                            CreatedAt = new DateTime(2025, 5, 24, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(354),
                            Email = "user4@mail.com",
                            FullName = "User 4",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("1bea191f-4cbb-4300-bba6-cbb3646f8dd9"),
                            CreatedAt = new DateTime(2025, 5, 23, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(357),
                            Email = "user5@mail.com",
                            FullName = "User 5",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("4265f660-da4a-429b-9490-615354aeeca3"),
                            CreatedAt = new DateTime(2025, 5, 22, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(362),
                            Email = "user6@mail.com",
                            FullName = "User 6",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("ba00b21a-f08d-4f73-8ba0-82504ebb0bbc"),
                            CreatedAt = new DateTime(2025, 5, 21, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(365),
                            Email = "user7@mail.com",
                            FullName = "User 7",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("ab7728f8-a2d0-45d0-b22c-cd6af53a6483"),
                            CreatedAt = new DateTime(2025, 5, 20, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(368),
                            Email = "user8@mail.com",
                            FullName = "User 8",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("643758bc-271d-4a17-91d7-a3a475759b06"),
                            CreatedAt = new DateTime(2025, 5, 19, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(372),
                            Email = "user9@mail.com",
                            FullName = "User 9",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6dfef277-7efd-455a-b3ca-b2da7b87f9e1"),
                            CreatedAt = new DateTime(2025, 5, 18, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(376),
                            Email = "user10@mail.com",
                            FullName = "User 10",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("662ab944-ef90-434b-8902-6e79f4f0b069"),
                            CreatedAt = new DateTime(2025, 5, 17, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(379),
                            Email = "user11@mail.com",
                            FullName = "User 11",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("038020d8-12e9-402b-b8c0-92d29821f0b4"),
                            CreatedAt = new DateTime(2025, 5, 16, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(382),
                            Email = "user12@mail.com",
                            FullName = "User 12",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("a49a21ae-dfd4-42e7-8560-ed013222d778"),
                            CreatedAt = new DateTime(2025, 5, 15, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(384),
                            Email = "user13@mail.com",
                            FullName = "User 13",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("943a39fe-6749-4463-aad7-7f50ada7826b"),
                            CreatedAt = new DateTime(2025, 5, 14, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(387),
                            Email = "user14@mail.com",
                            FullName = "User 14",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("b1e79aa7-230a-4341-b501-4dc96f9ece32"),
                            CreatedAt = new DateTime(2025, 5, 13, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(390),
                            Email = "user15@mail.com",
                            FullName = "User 15",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("9154dd80-942d-404f-a638-e234c7a4410b"),
                            CreatedAt = new DateTime(2025, 5, 12, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(392),
                            Email = "user16@mail.com",
                            FullName = "User 16",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("6f8f1956-7f7e-47f4-8308-57e913730f9c"),
                            CreatedAt = new DateTime(2025, 5, 11, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(397),
                            Email = "user17@mail.com",
                            FullName = "User 17",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("818eda47-8d9f-4abf-a820-ac1a6dead02d"),
                            CreatedAt = new DateTime(2025, 5, 10, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(400),
                            Email = "user18@mail.com",
                            FullName = "User 18",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("401c5178-21ed-4134-b9fe-47d514783814"),
                            CreatedAt = new DateTime(2025, 5, 9, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(403),
                            Email = "user19@mail.com",
                            FullName = "User 19",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("3b75043d-7a71-48d5-a0c8-57cd8b9e90ef"),
                            CreatedAt = new DateTime(2025, 5, 8, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(406),
                            Email = "user20@mail.com",
                            FullName = "User 20",
                            PasswordHash = "hash",
                            Role = "user"
                        },
                        new
                        {
                            Id = new Guid("87b01dd3-ddc6-4e20-92ec-fdfa1fe11af9"),
                            CreatedAt = new DateTime(2025, 5, 27, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(412),
                            Email = "admin1@mail.com",
                            FullName = "Admin 1",
                            PasswordHash = "hash",
                            Role = "admin"
                        },
                        new
                        {
                            Id = new Guid("6478a6f7-e82f-4042-bb81-0a723a43e311"),
                            CreatedAt = new DateTime(2025, 5, 26, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(417),
                            Email = "admin2@mail.com",
                            FullName = "Admin 2",
                            PasswordHash = "hash",
                            Role = "admin"
                        },
                        new
                        {
                            Id = new Guid("6069148c-0148-4b1d-87a7-15734464cd9f"),
                            CreatedAt = new DateTime(2025, 5, 25, 8, 47, 12, 384, DateTimeKind.Utc).AddTicks(420),
                            Email = "admin3@mail.com",
                            FullName = "Admin 3",
                            PasswordHash = "hash",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("Core.Model.Entities.UserAttendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAttendees");
                });

            modelBuilder.Entity("Core.Model.Entities.UserEventCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReminderTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEventCalendars");
                });

            modelBuilder.Entity("Core.Model.Entities.Image", b =>
                {
                    b.HasOne("Core.Model.Entities.Event", null)
                        .WithMany("Images")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("Core.Model.Entities.Payment", b =>
                {
                    b.HasOne("Core.Model.Entities.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Core.Model.Entities.Ticket", b =>
                {
                    b.HasOne("Core.Model.Entities.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId");

                    b.HasOne("Core.Model.Entities.User", "Buyer")
                        .WithMany("Tickets")
                        .HasForeignKey("BuyerId");

                    b.HasOne("Core.Model.Entities.Event", "Event")
                        .WithMany("Tickets")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.Navigation("Attendee");

                    b.Navigation("Buyer");

                    b.Navigation("Event");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Core.Model.Entities.UserAttendee", b =>
                {
                    b.HasOne("Core.Model.Entities.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Model.Entities.UserEventCalendar", b =>
                {
                    b.HasOne("Core.Model.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.Entities.User", "User")
                        .WithMany("Calendars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Model.Entities.Event", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Core.Model.Entities.User", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
